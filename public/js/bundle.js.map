{"version":3,"file":"bundle.js","sources":["../../node_modules/tslib/tslib.es6.js","../../../GraphiniusJS/lib/utils/StructUtils.js","../../../GraphiniusJS/lib/core/Nodes.js","../../../GraphiniusJS/lib/core/Edges.js","../../../GraphiniusJS/lib/utils/CallbackUtils.js","../../../GraphiniusJS/lib/search/BFS.js","../../../GraphiniusJS/lib/search/DFS.js","../../../GraphiniusJS/lib/datastructs/BinaryHeap.js","../../../GraphiniusJS/lib/search/PFS.js","../../../GraphiniusJS/lib/search/BellmanFord.js","../../../GraphiniusJS/lib/search/Johnsons.js","../../../GraphiniusJS/lib/config/run_config.js","../../../GraphiniusJS/lib/utils/Logger.js","../../../GraphiniusJS/lib/core/Graph.js","../../../GraphiniusJS/lib/search/FloydWarshall.js","../../../GraphiniusJS/lib/centralities/Betweenness.js","../../../GraphiniusJS/lib/centralities/Brandes.js","../../../GraphiniusJS/lib/centralities/Closeness.js","../../../GraphiniusJS/lib/centralities/Degree.js","../../../GraphiniusJS/lib/centralities/Pagerank.js","../../../GraphiniusJS/lib/utils/RemoteUtils.js","../../../GraphiniusJS/lib/io/input/CSVInput.js","../../../GraphiniusJS/lib/io/output/CSVOutput.js","../../../GraphiniusJS/lib/io/input/JSONInput.js","../../../GraphiniusJS/lib/io/output/JSONOutput.js","../../../GraphiniusJS/lib/search/Dijkstra.js","../../../GraphiniusJS/lib/perturbation/SimplePerturbations.js","../../../GraphiniusJS/lib/generators/KroneckerLeskovec.js","../../../GraphiniusJS/index.js","../../src/common/importGraph.ts","../../src/meetup/meetupIndexesLunr.ts","../../node_modules/fuse.js/dist/fuse.js","../../src/meetup/meetupIndexesFuse.ts","../../node_modules/idb/build/esm/chunk.js","../../node_modules/idb/build/esm/index.js","../../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $N = require(\"../core/Nodes\");\nconst $E = require(\"../core/Edges\");\nfunction clone(obj) {\n    if (obj === null || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof $N.BaseNode || obj instanceof $E.BaseEdge) {\n        return;\n    }\n    var cloneObj = obj.constructor ? obj.constructor() : {};\n    for (var attribute in obj) {\n        if (!obj.hasOwnProperty(attribute)) {\n            continue;\n        }\n        if (typeof obj[attribute] === \"object\") {\n            cloneObj[attribute] = clone(obj[attribute]);\n        }\n        else {\n            cloneObj[attribute] = obj[attribute];\n        }\n    }\n    return cloneObj;\n}\nexports.clone = clone;\nfunction shuffleArray(arr) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n        var randomIndex = Math.floor(Math.random() * (i + 1));\n        var itemAtIndex = arr[randomIndex];\n        arr[randomIndex] = arr[i];\n        arr[i] = itemAtIndex;\n    }\n    return arr;\n}\nexports.shuffleArray = shuffleArray;\nfunction mergeArrays(args, cb = undefined) {\n    for (var arg_idx in args) {\n        if (!Array.isArray(args[arg_idx])) {\n            throw new Error('Will only mergeArrays arrays');\n        }\n    }\n    var seen = {}, result = [], identity;\n    for (var i = 0; i < args.length; i++) {\n        for (var j = 0; j < args[i].length; j++) {\n            identity = typeof cb !== 'undefined' ? cb(args[i][j]) : args[i][j];\n            if (seen[identity] !== true) {\n                result.push(args[i][j]);\n                seen[identity] = true;\n            }\n        }\n    }\n    return result;\n}\nexports.mergeArrays = mergeArrays;\nfunction mergeObjects(args) {\n    for (var i = 0; i < args.length; i++) {\n        if (Object.prototype.toString.call(args[i]) !== '[object Object]') {\n            throw new Error('Will only take objects as inputs');\n        }\n    }\n    var result = {};\n    for (var i = 0; i < args.length; i++) {\n        for (var key in args[i]) {\n            if (args[i].hasOwnProperty(key)) {\n                result[key] = args[i][key];\n            }\n        }\n    }\n    return result;\n}\nexports.mergeObjects = mergeObjects;\nfunction findKey(obj, cb) {\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key) && cb(obj[key])) {\n            return key;\n        }\n    }\n    return undefined;\n}\nexports.findKey = findKey;\nfunction mergeOrderedArraysNoDups(a, b) {\n    let ret = [];\n    let idx_a = 0;\n    let idx_b = 0;\n    if (a[0] != null && b[0] != null) {\n        while (true) {\n            if (idx_a >= a.length || idx_b >= b.length)\n                break;\n            if (a[idx_a] == b[idx_b]) {\n                if (ret[ret.length - 1] != a[idx_a])\n                    ret.push(a[idx_a]);\n                idx_a++;\n                idx_b++;\n                continue;\n            }\n            if (a[idx_a] < b[idx_b]) {\n                ret.push(a[idx_a]);\n                idx_a++;\n                continue;\n            }\n            if (b[idx_b] < a[idx_a]) {\n                ret.push(b[idx_b]);\n                idx_b++;\n            }\n        }\n    }\n    while (idx_a < a.length) {\n        if (a[idx_a] != null)\n            ret.push(a[idx_a]);\n        idx_a++;\n    }\n    while (idx_b < b.length) {\n        if (b[idx_b] != null)\n            ret.push(b[idx_b]);\n        idx_b++;\n    }\n    return ret;\n}\nexports.mergeOrderedArraysNoDups = mergeOrderedArraysNoDups;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $SU = require(\"../utils/StructUtils\");\nclass BaseNode {\n    constructor(_id, features) {\n        this._id = _id;\n        this._in_degree = 0;\n        this._out_degree = 0;\n        this._und_degree = 0;\n        this._in_edges = {};\n        this._out_edges = {};\n        this._und_edges = {};\n        this._features = typeof features !== 'undefined' ? $SU.clone(features) : {};\n        this._label = this._features[\"label\"] || this._id;\n    }\n    getID() {\n        return this._id;\n    }\n    getLabel() {\n        return this._label;\n    }\n    setLabel(label) {\n        this._label = label;\n    }\n    getFeatures() {\n        return this._features;\n    }\n    getFeature(key) {\n        return this._features[key];\n    }\n    setFeatures(features) {\n        this._features = $SU.clone(features);\n    }\n    setFeature(key, value) {\n        this._features[key] = value;\n    }\n    deleteFeature(key) {\n        var feat = this._features[key];\n        delete this._features[key];\n        return feat;\n    }\n    clearFeatures() {\n        this._features = {};\n    }\n    inDegree() {\n        return this._in_degree;\n    }\n    outDegree() {\n        return this._out_degree;\n    }\n    degree() {\n        return this._und_degree;\n    }\n    addEdge(edge) {\n        var nodes = edge.getNodes();\n        if (nodes.a !== this && nodes.b !== this) {\n            throw new Error(\"Cannot add edge that does not connect to this node\");\n        }\n        var edge_id = edge.getID();\n        if (edge.isDirected()) {\n            if (nodes.a === this && !this._out_edges[edge_id]) {\n                this._out_edges[edge_id] = edge;\n                this._out_degree += 1;\n                if (nodes.b === this && !this._in_edges[edge_id]) {\n                    this._in_edges[edge.getID()] = edge;\n                    this._in_degree += 1;\n                }\n            }\n            else if (!this._in_edges[edge_id]) {\n                this._in_edges[edge.getID()] = edge;\n                this._in_degree += 1;\n            }\n        }\n        else {\n            if (this._und_edges[edge.getID()]) {\n                throw new Error(\"Cannot add same undirected edge multiple times.\");\n            }\n            this._und_edges[edge.getID()] = edge;\n            this._und_degree += 1;\n        }\n    }\n    hasEdge(edge) {\n        return !!this._in_edges[edge.getID()] || !!this._out_edges[edge.getID()] || !!this._und_edges[edge.getID()];\n    }\n    hasEdgeID(id) {\n        return !!this._in_edges[id] || !!this._out_edges[id] || !!this._und_edges[id];\n    }\n    getEdge(id) {\n        var edge = this._in_edges[id] || this._out_edges[id] || this._und_edges[id];\n        if (!edge) {\n            throw new Error(\"Cannot retrieve non-existing edge.\");\n        }\n        return edge;\n    }\n    inEdges() {\n        return this._in_edges;\n    }\n    outEdges() {\n        return this._out_edges;\n    }\n    undEdges() {\n        return this._und_edges;\n    }\n    dirEdges() {\n        return $SU.mergeObjects([this._in_edges, this._out_edges]);\n    }\n    allEdges() {\n        return $SU.mergeObjects([this._in_edges, this._out_edges, this._und_edges]);\n    }\n    removeEdge(edge) {\n        if (!this.hasEdge(edge)) {\n            throw new Error(\"Cannot remove unconnected edge.\");\n        }\n        var id = edge.getID();\n        var e = this._und_edges[id];\n        if (e) {\n            delete this._und_edges[id];\n            this._und_degree -= 1;\n        }\n        e = this._in_edges[id];\n        if (e) {\n            delete this._in_edges[id];\n            this._in_degree -= 1;\n        }\n        e = this._out_edges[id];\n        if (e) {\n            delete this._out_edges[id];\n            this._out_degree -= 1;\n        }\n    }\n    removeEdgeID(id) {\n        if (!this.hasEdgeID(id)) {\n            throw new Error(\"Cannot remove unconnected edge.\");\n        }\n        var e = this._und_edges[id];\n        if (e) {\n            delete this._und_edges[id];\n            this._und_degree -= 1;\n        }\n        e = this._in_edges[id];\n        if (e) {\n            delete this._in_edges[id];\n            this._in_degree -= 1;\n        }\n        e = this._out_edges[id];\n        if (e) {\n            delete this._out_edges[id];\n            this._out_degree -= 1;\n        }\n    }\n    clearOutEdges() {\n        this._out_edges = {};\n        this._out_degree = 0;\n    }\n    clearInEdges() {\n        this._in_edges = {};\n        this._in_degree = 0;\n    }\n    clearUndEdges() {\n        this._und_edges = {};\n        this._und_degree = 0;\n    }\n    clearEdges() {\n        this.clearInEdges();\n        this.clearOutEdges();\n        this.clearUndEdges();\n    }\n    prevNodes() {\n        var prevs = [];\n        var key, edge;\n        for (key in this._in_edges) {\n            if (this._in_edges.hasOwnProperty(key)) {\n                edge = this._in_edges[key];\n                prevs.push({\n                    node: edge.getNodes().a,\n                    edge: edge\n                });\n            }\n        }\n        return prevs;\n    }\n    nextNodes() {\n        var nexts = [];\n        var key, edge;\n        for (key in this._out_edges) {\n            if (this._out_edges.hasOwnProperty(key)) {\n                edge = this._out_edges[key];\n                nexts.push({\n                    node: edge.getNodes().b,\n                    edge: edge\n                });\n            }\n        }\n        return nexts;\n    }\n    connNodes() {\n        var conns = [];\n        var key, edge;\n        for (key in this._und_edges) {\n            if (this._und_edges.hasOwnProperty(key)) {\n                edge = this._und_edges[key];\n                var nodes = edge.getNodes();\n                if (nodes.a === this) {\n                    conns.push({\n                        node: edge.getNodes().b,\n                        edge: edge\n                    });\n                }\n                else {\n                    conns.push({\n                        node: edge.getNodes().a,\n                        edge: edge\n                    });\n                }\n            }\n        }\n        return conns;\n    }\n    reachNodes(identityFunc) {\n        var identity = 0;\n        return $SU.mergeArrays([this.nextNodes(), this.connNodes()], identityFunc || (ne => identity++));\n    }\n    allNeighbors(identityFunc) {\n        var identity = 0;\n        return $SU.mergeArrays([this.prevNodes(), this.nextNodes(), this.connNodes()], identityFunc || function (ne) { return identity++; });\n    }\n    clone() {\n        let new_node = new BaseNode(this._id);\n        new_node._label = this._label;\n        new_node.setFeatures($SU.clone(this.getFeatures()));\n        return new_node;\n    }\n}\nexports.BaseNode = BaseNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $N = require(\"./Nodes\");\nclass BaseEdge {\n    constructor(_id, _node_a, _node_b, options) {\n        this._id = _id;\n        this._node_a = _node_a;\n        this._node_b = _node_b;\n        if (!(_node_a instanceof $N.BaseNode) || !(_node_b instanceof $N.BaseNode)) {\n            throw new Error(\"cannot instantiate edge without two valid node objects\");\n        }\n        options = options || {};\n        this._directed = options.directed || false;\n        this._weighted = options.weighted || false;\n        this._weight = this._weighted ? (isNaN(options.weight) ? 1 : options.weight) : undefined;\n        this._label = options.label || this._id;\n    }\n    getID() {\n        return this._id;\n    }\n    getLabel() {\n        return this._label;\n    }\n    setLabel(label) {\n        this._label = label;\n    }\n    isDirected() {\n        return this._directed;\n    }\n    isWeighted() {\n        return this._weighted;\n    }\n    getWeight() {\n        return this._weight;\n    }\n    setWeight(w) {\n        if (!this._weighted) {\n            throw new Error(\"Cannot set weight on unweighted edge.\");\n        }\n        this._weight = w;\n    }\n    getNodes() {\n        return { a: this._node_a, b: this._node_b };\n    }\n    clone(new_node_a, new_node_b) {\n        if (!(new_node_a instanceof $N.BaseNode) || !(new_node_b instanceof $N.BaseNode)) {\n            throw new Error(\"refusing to clone edge if any new node is invalid\");\n        }\n        return new BaseEdge(this._id, new_node_a, new_node_b, {\n            directed: this._directed,\n            weighted: this._weighted,\n            weight: this._weight,\n            label: this._label\n        });\n    }\n}\nexports.BaseEdge = BaseEdge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction execCallbacks(cbs, context) {\n    cbs.forEach(function (cb) {\n        if (typeof cb === 'function') {\n            cb(context);\n        }\n        else {\n            throw new Error('Provided callback is not a function.');\n        }\n    });\n}\nexports.execCallbacks = execCallbacks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $G = require(\"../core/Graph\");\nconst $CB = require(\"../utils/CallbackUtils\");\nfunction BFS(graph, v, config) {\n    var config = config || prepareBFSStandardConfig(), callbacks = config.callbacks, dir_mode = config.dir_mode;\n    if (graph.getMode() === $G.GraphMode.INIT) {\n        throw new Error('Cowardly refusing to traverse graph without edges.');\n    }\n    if (dir_mode === $G.GraphMode.INIT) {\n        throw new Error('Cannot traverse a graph with dir_mode set to INIT.');\n    }\n    var bfsScope = {\n        marked: {},\n        nodes: graph.getNodes(),\n        queue: [],\n        current: null,\n        next_node: null,\n        next_edge: null,\n        root_node: v,\n        adj_nodes: []\n    };\n    if (callbacks.init_bfs) {\n        $CB.execCallbacks(callbacks.init_bfs, bfsScope);\n    }\n    bfsScope.queue.push(v);\n    var i = 0;\n    while (i < bfsScope.queue.length) {\n        bfsScope.current = bfsScope.queue[i++];\n        if (dir_mode === $G.GraphMode.MIXED) {\n            bfsScope.adj_nodes = bfsScope.current.reachNodes();\n        }\n        else if (dir_mode === $G.GraphMode.UNDIRECTED) {\n            bfsScope.adj_nodes = bfsScope.current.connNodes();\n        }\n        else if (dir_mode === $G.GraphMode.DIRECTED) {\n            bfsScope.adj_nodes = bfsScope.current.nextNodes();\n        }\n        else {\n            bfsScope.adj_nodes = [];\n        }\n        if (typeof callbacks.sort_nodes === 'function') {\n            callbacks.sort_nodes(bfsScope);\n        }\n        for (var adj_idx in bfsScope.adj_nodes) {\n            bfsScope.next_node = bfsScope.adj_nodes[adj_idx].node;\n            bfsScope.next_edge = bfsScope.adj_nodes[adj_idx].edge;\n            if (config.result[bfsScope.next_node.getID()].distance === Number.POSITIVE_INFINITY) {\n                if (callbacks.node_unmarked) {\n                    $CB.execCallbacks(callbacks.node_unmarked, bfsScope);\n                }\n            }\n            else {\n                if (callbacks.node_marked) {\n                    $CB.execCallbacks(callbacks.node_marked, bfsScope);\n                }\n            }\n        }\n    }\n    return config.result;\n}\nexports.BFS = BFS;\nfunction prepareBFSStandardConfig() {\n    var config = {\n        result: {},\n        callbacks: {\n            init_bfs: [],\n            node_unmarked: [],\n            node_marked: [],\n            sort_nodes: undefined\n        },\n        dir_mode: $G.GraphMode.MIXED,\n        messages: {},\n        filters: {}\n    }, result = config.result, callbacks = config.callbacks;\n    var count = 0;\n    var counter = function () {\n        return count++;\n    };\n    var initBFS = function (context) {\n        for (var key in context.nodes) {\n            config.result[key] = {\n                distance: Number.POSITIVE_INFINITY,\n                parent: null,\n                counter: -1\n            };\n        }\n        config.result[context.root_node.getID()] = {\n            distance: 0,\n            parent: context.root_node,\n            counter: counter()\n        };\n    };\n    callbacks.init_bfs.push(initBFS);\n    var nodeUnmarked = function (context) {\n        config.result[context.next_node.getID()] = {\n            distance: result[context.current.getID()].distance + 1,\n            parent: context.current,\n            counter: counter()\n        };\n        context.queue.push(context.next_node);\n    };\n    callbacks.node_unmarked.push(nodeUnmarked);\n    return config;\n}\nexports.prepareBFSStandardConfig = prepareBFSStandardConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $G = require(\"../core/Graph\");\nconst $CB = require(\"../utils/CallbackUtils\");\nfunction DFSVisit(graph, current_root, config) {\n    var dfsVisitScope = {\n        stack: [],\n        adj_nodes: [],\n        stack_entry: null,\n        current: null,\n        current_root: current_root\n    };\n    var config = config || prepareDFSVisitStandardConfig(), callbacks = config.callbacks, dir_mode = config.dir_mode;\n    if (graph.getMode() === $G.GraphMode.INIT) {\n        throw new Error('Cowardly refusing to traverse graph without edges.');\n    }\n    if (dir_mode === $G.GraphMode.INIT) {\n        throw new Error('Cannot traverse a graph with dir_mode set to INIT.');\n    }\n    if (callbacks.init_dfs_visit) {\n        $CB.execCallbacks(callbacks.init_dfs_visit, dfsVisitScope);\n    }\n    dfsVisitScope.stack.push({\n        node: current_root,\n        parent: current_root,\n        weight: 0\n    });\n    while (dfsVisitScope.stack.length) {\n        dfsVisitScope.stack_entry = dfsVisitScope.stack.pop();\n        dfsVisitScope.current = dfsVisitScope.stack_entry.node;\n        if (callbacks.node_popped) {\n            $CB.execCallbacks(callbacks.node_popped, dfsVisitScope);\n        }\n        if (!config.dfs_visit_marked[dfsVisitScope.current.getID()]) {\n            config.dfs_visit_marked[dfsVisitScope.current.getID()] = true;\n            if (callbacks.node_unmarked) {\n                $CB.execCallbacks(callbacks.node_unmarked, dfsVisitScope);\n            }\n            if (dir_mode === $G.GraphMode.MIXED) {\n                dfsVisitScope.adj_nodes = dfsVisitScope.current.reachNodes();\n            }\n            else if (dir_mode === $G.GraphMode.UNDIRECTED) {\n                dfsVisitScope.adj_nodes = dfsVisitScope.current.connNodes();\n            }\n            else if (dir_mode === $G.GraphMode.DIRECTED) {\n                dfsVisitScope.adj_nodes = dfsVisitScope.current.nextNodes();\n            }\n            if (typeof callbacks.sort_nodes === 'function') {\n                callbacks.sort_nodes(dfsVisitScope);\n            }\n            for (var adj_idx in dfsVisitScope.adj_nodes) {\n                if (callbacks) {\n                }\n                dfsVisitScope.stack.push({\n                    node: dfsVisitScope.adj_nodes[adj_idx].node,\n                    parent: dfsVisitScope.current,\n                    weight: dfsVisitScope.adj_nodes[adj_idx].edge.getWeight()\n                });\n            }\n            if (callbacks.adj_nodes_pushed) {\n                $CB.execCallbacks(callbacks.adj_nodes_pushed, dfsVisitScope);\n            }\n        }\n        else {\n            if (callbacks.node_marked) {\n                $CB.execCallbacks(callbacks.node_marked, dfsVisitScope);\n            }\n        }\n    }\n    return config.visit_result;\n}\nexports.DFSVisit = DFSVisit;\nfunction DFS(graph, root, config) {\n    var config = config || prepareDFSStandardConfig(), callbacks = config.callbacks, dir_mode = config.dir_mode;\n    if (graph.getMode() === $G.GraphMode.INIT) {\n        throw new Error('Cowardly refusing to traverse graph without edges.');\n    }\n    if (dir_mode === $G.GraphMode.INIT) {\n        throw new Error('Cannot traverse a graph with dir_mode set to INIT.');\n    }\n    var dfsScope = {\n        marked: {},\n        nodes: graph.getNodes()\n    };\n    if (callbacks.init_dfs) {\n        $CB.execCallbacks(callbacks.init_dfs, dfsScope);\n    }\n    callbacks.adj_nodes_pushed = callbacks.adj_nodes_pushed || [];\n    var markNode = function (context) {\n        dfsScope.marked[context.current.getID()] = true;\n    };\n    callbacks.adj_nodes_pushed.push(markNode);\n    var dfs_result = [{}];\n    var dfs_idx = 0;\n    var count = 0;\n    var counter = function () {\n        return count++;\n    };\n    var addToProperSegment = function (context) {\n        dfs_result[dfs_idx][context.current.getID()] = {\n            parent: context.stack_entry.parent,\n            counter: counter()\n        };\n    };\n    if (callbacks && callbacks.node_unmarked) {\n        callbacks.node_unmarked.push(addToProperSegment);\n    }\n    DFSVisit(graph, root, config);\n    for (var node_key in dfsScope.nodes) {\n        if (!dfsScope.marked[node_key]) {\n            dfs_idx++;\n            dfs_result.push({});\n            DFSVisit(graph, dfsScope.nodes[node_key], config);\n        }\n    }\n    return dfs_result;\n}\nexports.DFS = DFS;\nfunction prepareDFSVisitStandardConfig() {\n    var config = {\n        visit_result: {},\n        callbacks: {},\n        messages: {},\n        dfs_visit_marked: {},\n        dir_mode: $G.GraphMode.MIXED\n    }, result = config.visit_result, callbacks = config.callbacks;\n    var count = 0;\n    var counter = function () {\n        return count++;\n    };\n    callbacks.init_dfs_visit = callbacks.init_dfs_visit || [];\n    var initDFSVisit = function (context) {\n        result[context.current_root.getID()] = {\n            parent: context.current_root\n        };\n    };\n    callbacks.init_dfs_visit.push(initDFSVisit);\n    callbacks.node_unmarked = callbacks.node_unmarked || [];\n    var setResultEntry = function (context) {\n        result[context.current.getID()] = {\n            parent: context.stack_entry.parent,\n            counter: counter()\n        };\n    };\n    callbacks.node_unmarked.push(setResultEntry);\n    return config;\n}\nexports.prepareDFSVisitStandardConfig = prepareDFSVisitStandardConfig;\nfunction prepareDFSStandardConfig() {\n    var config = prepareDFSVisitStandardConfig(), callbacks = config.callbacks, result = config.visit_result;\n    callbacks.init_dfs = callbacks.init_dfs || [];\n    var setInitialResultEntries = function (context) {\n    };\n    callbacks.init_dfs.push(setInitialResultEntries);\n    return config;\n}\nexports.prepareDFSStandardConfig = prepareDFSStandardConfig;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BinaryHeapMode;\n(function (BinaryHeapMode) {\n    BinaryHeapMode[BinaryHeapMode[\"MIN\"] = 0] = \"MIN\";\n    BinaryHeapMode[BinaryHeapMode[\"MAX\"] = 1] = \"MAX\";\n})(BinaryHeapMode = exports.BinaryHeapMode || (exports.BinaryHeapMode = {}));\nclass BinaryHeap {\n    constructor(_mode = BinaryHeapMode.MIN, _evalPriority = (obj) => {\n        if (typeof obj !== 'number' && typeof obj !== 'string') {\n            return NaN;\n        }\n        if (typeof obj === 'number') {\n            return obj | 0;\n        }\n        return parseInt(obj);\n    }, _evalObjID = (obj) => {\n        return obj;\n    }) {\n        this._mode = _mode;\n        this._evalPriority = _evalPriority;\n        this._evalObjID = _evalObjID;\n        this._nr_removes = 0;\n        this._array = [];\n        this._positions = {};\n    }\n    getMode() {\n        return this._mode;\n    }\n    getArray() {\n        return this._array;\n    }\n    getPositions() {\n        return this._positions;\n    }\n    size() {\n        return this._array.length;\n    }\n    getEvalPriorityFun() {\n        return this._evalPriority;\n    }\n    evalInputScore(obj) {\n        return this._evalPriority(obj);\n    }\n    getEvalObjIDFun() {\n        return this._evalObjID;\n    }\n    evalInputObjID(obj) {\n        return this._evalObjID(obj);\n    }\n    peek() {\n        return this._array[0];\n    }\n    pop() {\n        if (this.size()) {\n            return this.remove(this._array[0]);\n        }\n    }\n    find(obj) {\n        var pos = this.getNodePosition(obj);\n        return this._array[pos];\n    }\n    insert(obj) {\n        if (isNaN(this._evalPriority(obj))) {\n            throw new Error(\"Cannot insert object without numeric priority.\");\n        }\n        this._array.push(obj);\n        this.setNodePosition(obj, this.size() - 1);\n        this.trickleUp(this.size() - 1);\n    }\n    remove(obj) {\n        this._nr_removes++;\n        if (isNaN(this._evalPriority(obj))) {\n            throw new Error('Object invalid.');\n        }\n        var objID = this._evalObjID(obj), found = null;\n        var pos = this.getNodePosition(obj), found = this._array[pos] != null ? this._array[pos] : null;\n        if (found === null) {\n            return undefined;\n        }\n        var last_array_obj = this._array.pop();\n        this.removeNodePosition(obj);\n        if (this.size() && found !== last_array_obj) {\n            this._array[pos] = last_array_obj;\n            this.setNodePosition(last_array_obj, pos);\n            this.trickleUp(pos);\n            this.trickleDown(pos);\n        }\n        return found;\n    }\n    trickleDown(i) {\n        var parent = this._array[i];\n        while (true) {\n            var right_child_idx = (i + 1) * 2, left_child_idx = right_child_idx - 1, right_child = this._array[right_child_idx], left_child = this._array[left_child_idx], swap = null;\n            if (left_child_idx < this.size() && !this.orderCorrect(parent, left_child)) {\n                swap = left_child_idx;\n            }\n            if (right_child_idx < this.size() && !this.orderCorrect(parent, right_child)\n                && !this.orderCorrect(left_child, right_child)) {\n                swap = right_child_idx;\n            }\n            if (swap === null) {\n                break;\n            }\n            this._array[i] = this._array[swap];\n            this._array[swap] = parent;\n            this.setNodePosition(this._array[i], i);\n            this.setNodePosition(this._array[swap], swap);\n            i = swap;\n        }\n    }\n    trickleUp(i) {\n        var child = this._array[i];\n        while (i) {\n            var parent_idx = Math.floor((i + 1) / 2) - 1, parent = this._array[parent_idx];\n            if (this.orderCorrect(parent, child)) {\n                break;\n            }\n            else {\n                this._array[parent_idx] = child;\n                this._array[i] = parent;\n                this.setNodePosition(child, parent_idx);\n                this.setNodePosition(parent, i);\n                i = parent_idx;\n            }\n        }\n    }\n    orderCorrect(obj_a, obj_b) {\n        var obj_a_pr = this._evalPriority(obj_a);\n        var obj_b_pr = this._evalPriority(obj_b);\n        if (this._mode === BinaryHeapMode.MIN) {\n            return obj_a_pr <= obj_b_pr;\n        }\n        else {\n            return obj_a_pr >= obj_b_pr;\n        }\n    }\n    setNodePosition(obj, pos) {\n        if (obj == null || pos == null || pos !== (pos | 0)) {\n            throw new Error('minium required arguments are obj and new_pos');\n        }\n        var pos_obj = {\n            score: this.evalInputScore(obj),\n            position: pos\n        };\n        var obj_key = this.evalInputObjID(obj);\n        this._positions[obj_key] = pos_obj;\n    }\n    getNodePosition(obj) {\n        var obj_key = this.evalInputObjID(obj);\n        var occurrence = this._positions[obj_key];\n        return occurrence ? occurrence.position : null;\n    }\n    removeNodePosition(obj) {\n        var obj_key = this.evalInputObjID(obj);\n        delete this._positions[obj_key];\n    }\n}\nexports.BinaryHeap = BinaryHeap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $E = require(\"../core/Edges\");\nconst $G = require(\"../core/Graph\");\nconst $CB = require(\"../utils/CallbackUtils\");\nconst $BH = require(\"../datastructs/BinaryHeap\");\nexports.DEFAULT_WEIGHT = 1;\nfunction PFS(graph, v, config) {\n    var config = config || preparePFSStandardConfig(), callbacks = config.callbacks, dir_mode = config.dir_mode, evalPriority = config.evalPriority, evalObjID = config.evalObjID;\n    if (graph.getMode() === $G.GraphMode.INIT) {\n        throw new Error('Cowardly refusing to traverse graph without edges.');\n    }\n    if (dir_mode === $G.GraphMode.INIT) {\n        throw new Error('Cannot traverse a graph with dir_mode set to INIT.');\n    }\n    var start_ne = {\n        node: v,\n        edge: new $E.BaseEdge('virtual start edge', v, v, { weighted: true, weight: 0 }),\n        best: 0\n    };\n    var scope = {\n        OPEN_HEAP: new $BH.BinaryHeap($BH.BinaryHeapMode.MIN, evalPriority, evalObjID),\n        OPEN: {},\n        CLOSED: {},\n        nodes: graph.getNodes(),\n        root_node: v,\n        current: start_ne,\n        adj_nodes: [],\n        next: null,\n        proposed_dist: Number.POSITIVE_INFINITY,\n    };\n    callbacks.init_pfs && $CB.execCallbacks(callbacks.init_pfs, scope);\n    scope.OPEN_HEAP.insert(start_ne);\n    scope.OPEN[start_ne.node.getID()] = start_ne;\n    while (scope.OPEN_HEAP.size()) {\n        scope.current = scope.OPEN_HEAP.pop();\n        callbacks.new_current && $CB.execCallbacks(callbacks.new_current, scope);\n        if (scope.current == null) {\n            console.log(\"HEAP popped undefined - HEAP size: \" + scope.OPEN_HEAP.size());\n        }\n        scope.OPEN[scope.current.node.getID()] = undefined;\n        scope.CLOSED[scope.current.node.getID()] = scope.current;\n        if (scope.current.node === config.goal_node) {\n            config.callbacks.goal_reached && $CB.execCallbacks(config.callbacks.goal_reached, scope);\n            return config.result;\n        }\n        if (dir_mode === $G.GraphMode.MIXED) {\n            scope.adj_nodes = scope.current.node.reachNodes();\n        }\n        else if (dir_mode === $G.GraphMode.UNDIRECTED) {\n            scope.adj_nodes = scope.current.node.connNodes();\n        }\n        else if (dir_mode === $G.GraphMode.DIRECTED) {\n            scope.adj_nodes = scope.current.node.nextNodes();\n        }\n        else {\n            throw new Error('Unsupported traversal mode. Please use directed, undirected, or mixed');\n        }\n        for (var adj_idx in scope.adj_nodes) {\n            scope.next = scope.adj_nodes[adj_idx];\n            if (scope.CLOSED[scope.next.node.getID()]) {\n                config.callbacks.node_closed && $CB.execCallbacks(config.callbacks.node_closed, scope);\n                continue;\n            }\n            if (scope.OPEN[scope.next.node.getID()]) {\n                scope.next.best = scope.OPEN[scope.next.node.getID()].best;\n                config.callbacks.node_open && $CB.execCallbacks(config.callbacks.node_open, scope);\n                scope.proposed_dist = scope.current.best + (isNaN(scope.next.edge.getWeight()) ? exports.DEFAULT_WEIGHT : scope.next.edge.getWeight());\n                if (scope.next.best > scope.proposed_dist) {\n                    config.callbacks.better_path && $CB.execCallbacks(config.callbacks.better_path, scope);\n                    scope.OPEN_HEAP.remove(scope.next);\n                    scope.next.best = scope.proposed_dist;\n                    scope.OPEN_HEAP.insert(scope.next);\n                    scope.OPEN[scope.next.node.getID()].best = scope.proposed_dist;\n                }\n                else if (scope.next.best === scope.proposed_dist) {\n                    config.callbacks.equal_path && $CB.execCallbacks(config.callbacks.equal_path, scope);\n                }\n                continue;\n            }\n            config.callbacks.not_encountered && $CB.execCallbacks(config.callbacks.not_encountered, scope);\n            scope.OPEN_HEAP.insert(scope.next);\n            scope.OPEN[scope.next.node.getID()] = scope.next;\n        }\n    }\n    return config.result;\n}\nexports.PFS = PFS;\nfunction preparePFSStandardConfig() {\n    let config = {\n        result: {},\n        callbacks: {\n            init_pfs: [],\n            new_current: [],\n            not_encountered: [],\n            node_open: [],\n            node_closed: [],\n            better_path: [],\n            equal_path: [],\n            goal_reached: []\n        },\n        messages: {\n            init_pfs_msgs: [],\n            new_current_msgs: [],\n            not_enc_msgs: [],\n            node_open_msgs: [],\n            node_closed_msgs: [],\n            better_path_msgs: [],\n            equal_path_msgs: [],\n            goal_reached_msgs: []\n        },\n        dir_mode: $G.GraphMode.MIXED,\n        goal_node: null,\n        evalPriority: function (ne) {\n            return ne.best || exports.DEFAULT_WEIGHT;\n        },\n        evalObjID: function (ne) {\n            return ne.node.getID();\n        }\n    };\n    let callbacks = config.callbacks;\n    var count = 0;\n    var counter = function () {\n        return count++;\n    };\n    var initPFS = function (context) {\n        for (var key in context.nodes) {\n            config.result[key] = {\n                distance: Number.POSITIVE_INFINITY,\n                parent: null,\n                counter: -1\n            };\n        }\n        config.result[context.root_node.getID()] = {\n            distance: 0,\n            parent: context.root_node,\n            counter: counter()\n        };\n    };\n    callbacks.init_pfs.push(initPFS);\n    var notEncountered = function (context) {\n        context.next.best = context.current.best + (isNaN(context.next.edge.getWeight()) ? exports.DEFAULT_WEIGHT : context.next.edge.getWeight());\n        config.result[context.next.node.getID()] = {\n            distance: context.next.best,\n            parent: context.current.node,\n            counter: undefined\n        };\n    };\n    callbacks.not_encountered.push(notEncountered);\n    var betterPathFound = function (context) {\n        config.result[context.next.node.getID()].distance = context.proposed_dist;\n        config.result[context.next.node.getID()].parent = context.current.node;\n    };\n    callbacks.better_path.push(betterPathFound);\n    return config;\n}\nexports.preparePFSStandardConfig = preparePFSStandardConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PFS_1 = require(\"./PFS\");\nfunction BFSanityChecks(graph, start) {\n    if (graph == null || start == null) {\n        throw new Error('Graph as well as start node have to be valid objects.');\n    }\n    if (graph.nrDirEdges() === 0 && graph.nrUndEdges() === 0) {\n        throw new Error('Cowardly refusing to traverse a graph without edges.');\n    }\n    if (!graph.hasNodeID(start.getID())) {\n        throw new Error('Cannot start from an outside node.');\n    }\n}\nfunction BellmanFordArray(graph, start) {\n    BFSanityChecks(graph, start);\n    let distances = [], nodes = graph.getNodes(), edge, node_keys = Object.keys(nodes), node, id_idx_map = {}, bf_edge_entry, new_weight, neg_cycle = false;\n    for (let n_idx = 0; n_idx < node_keys.length; ++n_idx) {\n        node = nodes[node_keys[n_idx]];\n        distances[n_idx] = (node === start) ? 0 : Number.POSITIVE_INFINITY;\n        id_idx_map[node.getID()] = n_idx;\n    }\n    let graph_edges = graph.getDirEdgesArray().concat(graph.getUndEdgesArray());\n    let bf_edges = [];\n    for (let e_idx = 0; e_idx < graph_edges.length; ++e_idx) {\n        edge = graph_edges[e_idx];\n        let bf_edge_entry = bf_edges.push([\n            id_idx_map[edge.getNodes().a.getID()],\n            id_idx_map[edge.getNodes().b.getID()],\n            isFinite(edge.getWeight()) ? edge.getWeight() : PFS_1.DEFAULT_WEIGHT,\n            edge.isDirected()\n        ]);\n    }\n    for (let i = 0; i < node_keys.length - 1; ++i) {\n        for (let e_idx = 0; e_idx < bf_edges.length; ++e_idx) {\n            edge = bf_edges[e_idx];\n            updateDist(edge[0], edge[1], edge[2]);\n            !edge[3] && updateDist(edge[1], edge[0], edge[2]);\n        }\n    }\n    for (let e_idx = 0; e_idx < bf_edges.length; ++e_idx) {\n        edge = bf_edges[e_idx];\n        if (betterDist(edge[0], edge[1], edge[2]) || (!edge[3] && betterDist(edge[1], edge[0], edge[2]))) {\n            neg_cycle = true;\n            break;\n        }\n    }\n    function updateDist(u, v, weight) {\n        new_weight = distances[u] + weight;\n        if (distances[v] > new_weight) {\n            distances[v] = new_weight;\n        }\n    }\n    function betterDist(u, v, weight) {\n        return (distances[v] > distances[u] + weight);\n    }\n    return { distances, neg_cycle };\n}\nexports.BellmanFordArray = BellmanFordArray;\nfunction BellmanFordDict(graph, start) {\n    BFSanityChecks(graph, start);\n    let distances = {}, edges, edge, a, b, weight, new_weight, nodes_size, neg_cycle = false;\n    distances = {};\n    edges = graph.getDirEdgesArray().concat(graph.getUndEdgesArray());\n    nodes_size = graph.nrNodes();\n    for (let node in graph.getNodes()) {\n        distances[node] = Number.POSITIVE_INFINITY;\n    }\n    distances[start.getID()] = 0;\n    for (let i = 0; i < nodes_size - 1; ++i) {\n        for (let e_idx = 0; e_idx < edges.length; ++e_idx) {\n            edge = edges[e_idx];\n            a = edge.getNodes().a.getID();\n            b = edge.getNodes().b.getID();\n            weight = isFinite(edge.getWeight()) ? edge.getWeight() : PFS_1.DEFAULT_WEIGHT;\n            updateDist(a, b, weight);\n            !edge.isDirected() && updateDist(b, a, weight);\n        }\n    }\n    for (let edgeID in edges) {\n        edge = edges[edgeID];\n        a = edge.getNodes().a.getID();\n        b = edge.getNodes().b.getID();\n        weight = isFinite(edge.getWeight()) ? edge.getWeight() : PFS_1.DEFAULT_WEIGHT;\n        if (betterDist(a, b, weight) || (!edge.isDirected() && betterDist(b, a, weight))) {\n            neg_cycle = true;\n        }\n    }\n    function updateDist(u, v, weight) {\n        new_weight = distances[u] + weight;\n        if (distances[v] > new_weight) {\n            distances[v] = new_weight;\n        }\n    }\n    function betterDist(u, v, weight) {\n        return (distances[v] > distances[u] + weight);\n    }\n    return { distances, neg_cycle };\n}\nexports.BellmanFordDict = BellmanFordDict;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $N = require(\"../core/Nodes\");\nconst $PFS = require(\"../search/PFS\");\nconst $BF = require(\"../search/BellmanFord\");\nconst $SU = require(\"../utils/StructUtils\");\nfunction Johnsons(graph) {\n    if (graph.nrDirEdges() === 0 && graph.nrUndEdges() === 0) {\n        throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n    }\n    let allNodes = graph.getNodes();\n    let nodeKeys = Object.keys(allNodes);\n    if (graph.hasNegativeEdge()) {\n        var extraNode = new $N.BaseNode(\"extraNode\");\n        graph = addExtraNandE(graph, extraNode);\n        let BFresult = $BF.BellmanFordDict(graph, extraNode);\n        if (BFresult.neg_cycle) {\n            throw new Error(\"The graph contains a negative cycle, thus it can not be processed\");\n        }\n        else {\n            let newWeights = BFresult.distances;\n            graph = reWeighGraph(graph, newWeights, extraNode);\n            graph.deleteNode(extraNode);\n            return PFSFromAllNodes(graph);\n        }\n    }\n    return PFSFromAllNodes(graph);\n}\nexports.Johnsons = Johnsons;\nfunction addExtraNandE(target, nodeToAdd) {\n    let allNodes = target.getNodes();\n    target.addNode(nodeToAdd);\n    let tempCounter = 0;\n    for (let nodeKey in allNodes) {\n        if (allNodes[nodeKey].getID() != nodeToAdd.getID()) {\n            target.addEdgeByNodeIDs(\"temp\" + tempCounter, nodeToAdd.getID(), allNodes[nodeKey].getID(), { directed: true, weighted: true, weight: 0 });\n            tempCounter++;\n        }\n    }\n    return target;\n}\nexports.addExtraNandE = addExtraNandE;\nfunction reWeighGraph(target, distDict, tempNode) {\n    let edges = target.getDirEdgesArray().concat(target.getUndEdgesArray());\n    for (let edge of edges) {\n        var a = edge.getNodes().a.getID();\n        var b = edge.getNodes().b.getID();\n        if (a == tempNode.getID()) {\n            continue;\n        }\n        else if (edge.isWeighted) {\n            let oldWeight = edge.getWeight();\n            let newWeight = oldWeight + distDict[a] - distDict[b];\n            edge.setWeight(newWeight);\n        }\n        else {\n            let oldWeight = $PFS.DEFAULT_WEIGHT;\n            let newWeight = oldWeight + distDict[a] - distDict[b];\n            let edgeID = edge.getID();\n            let dirNess = edge.isDirected();\n            target.deleteEdge(edge);\n            target.addEdgeByNodeIDs(edgeID, a, b, { directed: dirNess, weighted: true, weight: newWeight });\n        }\n    }\n    return target;\n}\nexports.reWeighGraph = reWeighGraph;\nfunction PFSFromAllNodes(graph) {\n    let dists = graph.adjListArray();\n    let next = graph.nextArray();\n    let nodesDict = graph.getNodes();\n    let nodeIDIdxMap = {};\n    let i = 0;\n    for (let key in nodesDict) {\n        nodeIDIdxMap[nodesDict[key].getID()] = i++;\n    }\n    let specialConfig = $PFS.preparePFSStandardConfig();\n    var notEncounteredJohnsons = function (context) {\n        context.next.best =\n            context.current.best + (isNaN(context.next.edge.getWeight()) ? $PFS.DEFAULT_WEIGHT : context.next.edge.getWeight());\n        let i = nodeIDIdxMap[context.root_node.getID()], j = nodeIDIdxMap[context.next.node.getID()];\n        if (context.current.node == context.root_node) {\n            dists[i][j] = context.next.best;\n            next[i][j][0] = j;\n        }\n        else {\n            dists[i][j] = context.next.best;\n            next[i][j][0] = nodeIDIdxMap[context.current.node.getID()];\n        }\n    };\n    specialConfig.callbacks.not_encountered.splice(0, 1, notEncounteredJohnsons);\n    var betterPathJohnsons = function (context) {\n        let i = nodeIDIdxMap[context.root_node.getID()], j = nodeIDIdxMap[context.next.node.getID()];\n        dists[i][j] = context.proposed_dist;\n        if (context.current.node !== context.root_node) {\n            next[i][j].splice(0, next[i][j].length, nodeIDIdxMap[context.current.node.getID()]);\n        }\n    };\n    specialConfig.callbacks.better_path.splice(0, 1, betterPathJohnsons);\n    var equalPathJohnsons = function (context) {\n        let i = nodeIDIdxMap[context.root_node.getID()], j = nodeIDIdxMap[context.next.node.getID()];\n        if (context.current.node !== context.root_node) {\n            next[i][j] = $SU.mergeOrderedArraysNoDups(next[i][j], [nodeIDIdxMap[context.current.node.getID()]]);\n        }\n    };\n    specialConfig.callbacks.equal_path.push(equalPathJohnsons);\n    for (let key in nodesDict) {\n        $PFS.PFS(graph, nodesDict[key], specialConfig);\n    }\n    return [dists, next];\n}\nexports.PFSFromAllNodes = PFSFromAllNodes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LOG_LEVELS = {\n    debug: 'debug',\n    production: 'production'\n};\nexports.LOG_LEVELS = LOG_LEVELS;\nlet log_level = LOG_LEVELS.production;\nif (typeof window === 'undefined' && typeof process !== 'undefined' && process.env) {\n    log_level = process.env['G_LOG'];\n}\nconst RUN_CONFIG = {\n    log_level\n};\nexports.RUN_CONFIG = RUN_CONFIG;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst run_config_1 = require(\"../config/run_config\");\nvar LogColors;\n(function (LogColors) {\n    LogColors[LogColors[\"FgBlack\"] = 30] = \"FgBlack\";\n    LogColors[LogColors[\"FgRed\"] = 31] = \"FgRed\";\n    LogColors[LogColors[\"FgGreen\"] = 32] = \"FgGreen\";\n    LogColors[LogColors[\"FgYellow\"] = 33] = \"FgYellow\";\n    LogColors[LogColors[\"FgBlue\"] = 34] = \"FgBlue\";\n    LogColors[LogColors[\"FgMagenta\"] = 35] = \"FgMagenta\";\n    LogColors[LogColors[\"FgCyan\"] = 36] = \"FgCyan\";\n    LogColors[LogColors[\"FgWhite\"] = 37] = \"FgWhite\";\n    LogColors[LogColors[\"BgBlack\"] = 40] = \"BgBlack\";\n    LogColors[LogColors[\"BgRed\"] = 41] = \"BgRed\";\n    LogColors[LogColors[\"BgGreen\"] = 42] = \"BgGreen\";\n    LogColors[LogColors[\"BgYellow\"] = 43] = \"BgYellow\";\n    LogColors[LogColors[\"BgBlue\"] = 44] = \"BgBlue\";\n    LogColors[LogColors[\"BgMagenta\"] = 45] = \"BgMagenta\";\n    LogColors[LogColors[\"BgCyan\"] = 46] = \"BgCyan\";\n    LogColors[LogColors[\"BgWhite\"] = 47] = \"BgWhite\";\n})(LogColors = exports.LogColors || (exports.LogColors = {}));\nconst DEFAULT_COLOR = 37;\nclass Logger {\n    constructor(config) {\n        this.config = null;\n        this.config = config || run_config_1.RUN_CONFIG;\n    }\n    log(msg, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            console.log.call(console, this.colorize(color, msg, bright));\n            return true;\n        }\n        return false;\n    }\n    error(err, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            console.error.call(console, this.colorize(color, err, bright));\n            return true;\n        }\n        return false;\n    }\n    dir(obj, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            console.dir.call(console, this.colorize(color, obj, bright));\n            return true;\n        }\n        return false;\n    }\n    info(msg, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            console.info.call(console, this.colorize(color, msg, bright));\n            return true;\n        }\n        return false;\n    }\n    warn(msg, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            console.warn.call(console, this.colorize(color, msg, bright));\n            return true;\n        }\n        return false;\n    }\n    write(msg, color = DEFAULT_COLOR, bright = false) {\n        if (this.config.log_level === run_config_1.LOG_LEVELS.debug) {\n            process.stdout.write.call(process.stdout, this.colorize(color, msg, bright));\n            return true;\n        }\n        return false;\n    }\n    colorize(color, output, bright) {\n        let out_bright = bright ? '\\x1b[1m' : null;\n        return [out_bright, '\\x1b[', color, 'm', output, '\\x1b[0m'].join('');\n    }\n}\nexports.Logger = Logger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Nodes_1 = require(\"./Nodes\");\nconst Edges_1 = require(\"./Edges\");\nconst BFS_1 = require(\"../search/BFS\");\nconst DFS_1 = require(\"../search/DFS\");\nconst BellmanFord_1 = require(\"../search/BellmanFord\");\nconst Johnsons_1 = require(\"../search/Johnsons\");\nconst Logger_1 = require(\"../utils/Logger\");\nlet logger = new Logger_1.Logger();\nconst DEFAULT_WEIGHT = 1;\nvar GraphMode;\n(function (GraphMode) {\n    GraphMode[GraphMode[\"INIT\"] = 0] = \"INIT\";\n    GraphMode[GraphMode[\"DIRECTED\"] = 1] = \"DIRECTED\";\n    GraphMode[GraphMode[\"UNDIRECTED\"] = 2] = \"UNDIRECTED\";\n    GraphMode[GraphMode[\"MIXED\"] = 3] = \"MIXED\";\n})(GraphMode = exports.GraphMode || (exports.GraphMode = {}));\nclass BaseGraph {\n    constructor(_label) {\n        this._label = _label;\n        this._nr_nodes = 0;\n        this._nr_dir_edges = 0;\n        this._nr_und_edges = 0;\n        this._mode = GraphMode.INIT;\n        this._nodes = {};\n        this._dir_edges = {};\n        this._und_edges = {};\n    }\n    reweighIfHasNegativeEdge(clone = false) {\n        if (this.hasNegativeEdge()) {\n            let result_graph = clone ? this.cloneStructure() : this;\n            var extraNode = new Nodes_1.BaseNode(\"extraNode\");\n            result_graph = Johnsons_1.addExtraNandE(result_graph, extraNode);\n            let BFresult = BellmanFord_1.BellmanFordDict(result_graph, extraNode);\n            if (BFresult.neg_cycle) {\n                throw new Error(\"The graph contains a negative cycle, thus it can not be processed\");\n            }\n            else {\n                let newWeights = BFresult.distances;\n                result_graph = Johnsons_1.reWeighGraph(result_graph, newWeights, extraNode);\n                result_graph.deleteNode(extraNode);\n            }\n            return result_graph;\n        }\n    }\n    toDirectedGraph(copy = false) {\n        let result_graph = copy ? this.cloneStructure() : this;\n        if (this._nr_dir_edges === 0 && this._nr_und_edges === 0) {\n            throw new Error(\"Cowardly refusing to re-interpret an empty graph.\");\n        }\n        return result_graph;\n    }\n    toUndirectedGraph() {\n        return this;\n    }\n    hasNegativeEdge() {\n        let has_neg_edge = false, edge;\n        for (let edge_id in this._und_edges) {\n            edge = this._und_edges[edge_id];\n            if (!edge.isWeighted()) {\n                continue;\n            }\n            if (edge.getWeight() < 0) {\n                return true;\n            }\n        }\n        for (let edge_id in this._dir_edges) {\n            edge = this._dir_edges[edge_id];\n            if (!edge.isWeighted()) {\n                continue;\n            }\n            if (edge.getWeight() < 0) {\n                has_neg_edge = true;\n                break;\n            }\n        }\n        return has_neg_edge;\n    }\n    hasNegativeCycles(node) {\n        if (!this.hasNegativeEdge()) {\n            return false;\n        }\n        let negative_cycle = false, start = node ? node : this.getRandomNode();\n        DFS_1.DFS(this, start).forEach(comp => {\n            let min_count = Number.POSITIVE_INFINITY, comp_start_node;\n            Object.keys(comp).forEach(node_id => {\n                if (min_count > comp[node_id].counter) {\n                    min_count = comp[node_id].counter;\n                    comp_start_node = node_id;\n                }\n            });\n            if (BellmanFord_1.BellmanFordArray(this, this._nodes[comp_start_node]).neg_cycle) {\n                negative_cycle = true;\n            }\n        });\n        return negative_cycle;\n    }\n    nextArray(incoming = false) {\n        let next = [], node_keys = Object.keys(this._nodes);\n        const adjDict = this.adjListDict(incoming, true, 0);\n        for (let i = 0; i < this._nr_nodes; ++i) {\n            next.push([]);\n            for (let j = 0; j < this._nr_nodes; ++j) {\n                next[i].push([]);\n                next[i][j].push(i === j ? j : isFinite(adjDict[node_keys[i]][node_keys[j]]) ? j : null);\n            }\n        }\n        return next;\n    }\n    adjListArray(incoming = false) {\n        let adjList = [], node_keys = Object.keys(this._nodes);\n        const adjDict = this.adjListDict(incoming, true, 0);\n        for (let i = 0; i < this._nr_nodes; ++i) {\n            adjList.push([]);\n            for (let j = 0; j < this._nr_nodes; ++j) {\n                adjList[i].push(i === j ? 0 : isFinite(adjDict[node_keys[i]][node_keys[j]]) ? adjDict[node_keys[i]][node_keys[j]] : Number.POSITIVE_INFINITY);\n            }\n        }\n        return adjList;\n    }\n    adjListDict(incoming = false, include_self = false, self_dist = 0) {\n        let adj_list_dict = {}, nodes = this.getNodes(), cur_dist, key, cur_edge_weight;\n        for (key in nodes) {\n            adj_list_dict[key] = {};\n            if (include_self) {\n                adj_list_dict[key][key] = self_dist;\n            }\n        }\n        for (key in nodes) {\n            let neighbors = incoming ? nodes[key].reachNodes().concat(nodes[key].prevNodes()) : nodes[key].reachNodes();\n            neighbors.forEach((ne) => {\n                cur_dist = adj_list_dict[key][ne.node.getID()] || Number.POSITIVE_INFINITY;\n                cur_edge_weight = isNaN(ne.edge.getWeight()) ? DEFAULT_WEIGHT : ne.edge.getWeight();\n                if (cur_edge_weight < cur_dist) {\n                    adj_list_dict[key][ne.node.getID()] = cur_edge_weight;\n                    if (incoming) {\n                        adj_list_dict[ne.node.getID()][key] = cur_edge_weight;\n                    }\n                }\n                else {\n                    adj_list_dict[key][ne.node.getID()] = cur_dist;\n                    if (incoming) {\n                        adj_list_dict[ne.node.getID()][key] = cur_dist;\n                    }\n                }\n            });\n        }\n        return adj_list_dict;\n    }\n    getMode() {\n        return this._mode;\n    }\n    getStats() {\n        return {\n            mode: this._mode,\n            nr_nodes: this._nr_nodes,\n            nr_und_edges: this._nr_und_edges,\n            nr_dir_edges: this._nr_dir_edges,\n            density_dir: this._nr_dir_edges / (this._nr_nodes * (this._nr_nodes - 1)),\n            density_und: 2 * this._nr_und_edges / (this._nr_nodes * (this._nr_nodes - 1))\n        };\n    }\n    nrNodes() {\n        return this._nr_nodes;\n    }\n    nrDirEdges() {\n        return this._nr_dir_edges;\n    }\n    nrUndEdges() {\n        return this._nr_und_edges;\n    }\n    addNodeByID(id, opts) {\n        if (this.hasNodeID(id)) {\n            throw new Error(\"Won't add node with duplicate ID.\");\n        }\n        var node = new Nodes_1.BaseNode(id, opts);\n        return this.addNode(node) ? node : null;\n    }\n    addNode(node) {\n        if (this.hasNodeID(node.getID())) {\n            throw new Error(\"Won't add node with duplicate ID.\");\n        }\n        this._nodes[node.getID()] = node;\n        this._nr_nodes += 1;\n        return true;\n    }\n    hasNodeID(id) {\n        return !!this._nodes[id];\n    }\n    getNodeById(id) {\n        return this._nodes[id];\n    }\n    getNodes() {\n        return this._nodes;\n    }\n    getRandomNode() {\n        return this.pickRandomProperty(this._nodes);\n    }\n    deleteNode(node) {\n        var rem_node = this._nodes[node.getID()];\n        if (!rem_node) {\n            throw new Error('Cannot remove un-added node.');\n        }\n        var in_deg = node.inDegree();\n        var out_deg = node.outDegree();\n        var deg = node.degree();\n        if (in_deg) {\n            this.deleteInEdgesOf(node);\n        }\n        if (out_deg) {\n            this.deleteOutEdgesOf(node);\n        }\n        if (deg) {\n            this.deleteUndEdgesOf(node);\n        }\n        delete this._nodes[node.getID()];\n        this._nr_nodes -= 1;\n    }\n    hasEdgeID(id) {\n        return !!this._dir_edges[id] || !!this._und_edges[id];\n    }\n    getEdgeById(id) {\n        var edge = this._dir_edges[id] || this._und_edges[id];\n        if (!edge) {\n            throw new Error(\"cannot retrieve edge with non-existing ID.\");\n        }\n        return edge;\n    }\n    checkExistanceOfEdgeNodes(node_a, node_b) {\n        if (!node_a) {\n            throw new Error(\"Cannot find edge. Node A does not exist (in graph).\");\n        }\n        if (!node_b) {\n            throw new Error(\"Cannot find edge. Node B does not exist (in graph).\");\n        }\n    }\n    getDirEdgeByNodeIDs(node_a_id, node_b_id) {\n        const node_a = this.getNodeById(node_a_id);\n        const node_b = this.getNodeById(node_b_id);\n        this.checkExistanceOfEdgeNodes(node_a, node_b);\n        let edges_dir = node_a.outEdges(), edges_dir_keys = Object.keys(edges_dir);\n        for (let i = 0; i < edges_dir_keys.length; i++) {\n            var edge = edges_dir[edges_dir_keys[i]];\n            if (edge.getNodes().b.getID() == node_b_id) {\n                return edge;\n            }\n        }\n        throw new Error(`Cannot find edge. There is no edge between Node ${node_a_id} and ${node_b_id}.`);\n    }\n    getUndEdgeByNodeIDs(node_a_id, node_b_id) {\n        const node_a = this.getNodeById(node_a_id);\n        const node_b = this.getNodeById(node_b_id);\n        this.checkExistanceOfEdgeNodes(node_a, node_b);\n        let edges_und = node_a.undEdges(), edges_und_keys = Object.keys(edges_und);\n        for (let i = 0; i < edges_und_keys.length; i++) {\n            var edge = edges_und[edges_und_keys[i]];\n            var b;\n            (edge.getNodes().a.getID() == node_a_id) ? (b = edge.getNodes().b.getID()) : (b = edge.getNodes().a.getID());\n            if (b == node_b_id) {\n                return edge;\n            }\n        }\n    }\n    getDirEdges() {\n        return this._dir_edges;\n    }\n    getUndEdges() {\n        return this._und_edges;\n    }\n    getDirEdgesArray() {\n        let edges = [];\n        for (let e_id in this._dir_edges) {\n            edges.push(this._dir_edges[e_id]);\n        }\n        return edges;\n    }\n    getUndEdgesArray() {\n        let edges = [];\n        for (let e_id in this._und_edges) {\n            edges.push(this._und_edges[e_id]);\n        }\n        return edges;\n    }\n    addEdgeByNodeIDs(label, node_a_id, node_b_id, opts) {\n        var node_a = this.getNodeById(node_a_id), node_b = this.getNodeById(node_b_id);\n        if (!node_a) {\n            throw new Error(\"Cannot add edge. Node A does not exist\");\n        }\n        else if (!node_b) {\n            throw new Error(\"Cannot add edge. Node B does not exist\");\n        }\n        else {\n            return this.addEdgeByID(label, node_a, node_b, opts);\n        }\n    }\n    addEdgeByID(id, node_a, node_b, opts) {\n        let edge = new Edges_1.BaseEdge(id, node_a, node_b, opts || {});\n        return this.addEdge(edge);\n    }\n    addEdge(edge) {\n        let node_a = edge.getNodes().a, node_b = edge.getNodes().b;\n        if (!this.hasNodeID(node_a.getID()) || !this.hasNodeID(node_b.getID())\n            || this._nodes[node_a.getID()] !== node_a || this._nodes[node_b.getID()] !== node_b) {\n            throw new Error(\"can only add edge between two nodes existing in graph\");\n        }\n        node_a.addEdge(edge);\n        if (edge.isDirected()) {\n            node_b.addEdge(edge);\n            this._dir_edges[edge.getID()] = edge;\n            this._nr_dir_edges += 1;\n            this.updateGraphMode();\n        }\n        else {\n            if (node_a !== node_b) {\n                node_b.addEdge(edge);\n            }\n            this._und_edges[edge.getID()] = edge;\n            this._nr_und_edges += 1;\n            this.updateGraphMode();\n        }\n        return edge;\n    }\n    deleteEdge(edge) {\n        var dir_edge = this._dir_edges[edge.getID()];\n        var und_edge = this._und_edges[edge.getID()];\n        if (!dir_edge && !und_edge) {\n            throw new Error('cannot remove non-existing edge.');\n        }\n        var nodes = edge.getNodes();\n        nodes.a.removeEdge(edge);\n        if (nodes.a !== nodes.b) {\n            nodes.b.removeEdge(edge);\n        }\n        if (dir_edge) {\n            delete this._dir_edges[edge.getID()];\n            this._nr_dir_edges -= 1;\n        }\n        else {\n            delete this._und_edges[edge.getID()];\n            this._nr_und_edges -= 1;\n        }\n        this.updateGraphMode();\n    }\n    deleteInEdgesOf(node) {\n        this.checkConnectedNodeOrThrow(node);\n        var in_edges = node.inEdges();\n        var key, edge;\n        for (key in in_edges) {\n            edge = in_edges[key];\n            edge.getNodes().a.removeEdge(edge);\n            delete this._dir_edges[edge.getID()];\n            this._nr_dir_edges -= 1;\n        }\n        node.clearInEdges();\n        this.updateGraphMode();\n    }\n    deleteOutEdgesOf(node) {\n        this.checkConnectedNodeOrThrow(node);\n        var out_edges = node.outEdges();\n        var key, edge;\n        for (key in out_edges) {\n            edge = out_edges[key];\n            edge.getNodes().b.removeEdge(edge);\n            delete this._dir_edges[edge.getID()];\n            this._nr_dir_edges -= 1;\n        }\n        node.clearOutEdges();\n        this.updateGraphMode();\n    }\n    deleteDirEdgesOf(node) {\n        this.deleteInEdgesOf(node);\n        this.deleteOutEdgesOf(node);\n    }\n    deleteUndEdgesOf(node) {\n        this.checkConnectedNodeOrThrow(node);\n        var und_edges = node.undEdges();\n        var key, edge;\n        for (key in und_edges) {\n            edge = und_edges[key];\n            var conns = edge.getNodes();\n            conns.a.removeEdge(edge);\n            if (conns.a !== conns.b) {\n                conns.b.removeEdge(edge);\n            }\n            delete this._und_edges[edge.getID()];\n            this._nr_und_edges -= 1;\n        }\n        node.clearUndEdges();\n        this.updateGraphMode();\n    }\n    deleteAllEdgesOf(node) {\n        this.deleteDirEdgesOf(node);\n        this.deleteUndEdgesOf(node);\n    }\n    clearAllDirEdges() {\n        for (var edge in this._dir_edges) {\n            this.deleteEdge(this._dir_edges[edge]);\n        }\n    }\n    clearAllUndEdges() {\n        for (var edge in this._und_edges) {\n            this.deleteEdge(this._und_edges[edge]);\n        }\n    }\n    clearAllEdges() {\n        this.clearAllDirEdges();\n        this.clearAllUndEdges();\n    }\n    getRandomDirEdge() {\n        return this.pickRandomProperty(this._dir_edges);\n    }\n    getRandomUndEdge() {\n        return this.pickRandomProperty(this._und_edges);\n    }\n    cloneStructure() {\n        let new_graph = new BaseGraph(this._label), old_nodes = this.getNodes(), old_edge, new_node_a = null, new_node_b = null;\n        for (let node_id in old_nodes) {\n            new_graph.addNode(old_nodes[node_id].clone());\n        }\n        [this.getDirEdges(), this.getUndEdges()].forEach((old_edges) => {\n            for (let edge_id in old_edges) {\n                old_edge = old_edges[edge_id];\n                new_node_a = new_graph.getNodeById(old_edge.getNodes().a.getID());\n                new_node_b = new_graph.getNodeById(old_edge.getNodes().b.getID());\n                new_graph.addEdge(old_edge.clone(new_node_a, new_node_b));\n            }\n        });\n        return new_graph;\n    }\n    cloneSubGraphStructure(root, cutoff) {\n        let new_graph = new BaseGraph(this._label);\n        let config = BFS_1.prepareBFSStandardConfig();\n        var bfsNodeUnmarkedTestCallback = function (context) {\n            if (config.result[context.next_node.getID()].counter > cutoff) {\n                context.queue = [];\n            }\n            else {\n                new_graph.addNode(context.next_node.clone());\n            }\n        };\n        config.callbacks.node_unmarked.push(bfsNodeUnmarkedTestCallback);\n        BFS_1.BFS(this, root, config);\n        let old_edge, new_node_a = null, new_node_b = null;\n        [this.getDirEdges(), this.getUndEdges()].forEach((old_edges) => {\n            for (let edge_id in old_edges) {\n                old_edge = old_edges[edge_id];\n                new_node_a = new_graph.getNodeById(old_edge.getNodes().a.getID());\n                new_node_b = new_graph.getNodeById(old_edge.getNodes().b.getID());\n                if (new_node_a != null && new_node_b != null)\n                    new_graph.addEdge(old_edge.clone(new_node_a, new_node_b));\n            }\n        });\n        return new_graph;\n    }\n    checkConnectedNodeOrThrow(node) {\n        var node = this._nodes[node.getID()];\n        if (!node) {\n            throw new Error('Cowardly refusing to delete edges of un-added node.');\n        }\n    }\n    updateGraphMode() {\n        var nr_dir = this._nr_dir_edges, nr_und = this._nr_und_edges;\n        if (nr_dir && nr_und) {\n            this._mode = GraphMode.MIXED;\n        }\n        else if (nr_dir) {\n            this._mode = GraphMode.DIRECTED;\n        }\n        else if (nr_und) {\n            this._mode = GraphMode.UNDIRECTED;\n        }\n        else {\n            this._mode = GraphMode.INIT;\n        }\n    }\n    pickRandomProperty(propList) {\n        let tmpList = Object.keys(propList);\n        let randomPropertyName = tmpList[Math.floor(Math.random() * tmpList.length)];\n        return propList[randomPropertyName];\n    }\n    pickRandomProperties(propList, amount) {\n        let ids = [];\n        let keys = Object.keys(propList);\n        let fraction = amount / keys.length;\n        let used_keys = {};\n        for (let i = 0; ids.length < amount && i < keys.length; i++) {\n            if (Math.random() < fraction) {\n                ids.push(keys[i]);\n                used_keys[keys[i]] = i;\n            }\n        }\n        let diff = amount - ids.length;\n        for (let i = 0; i < keys.length && diff; i++) {\n            if (used_keys[keys[i]] == null) {\n                ids.push(keys[i]);\n                diff--;\n            }\n        }\n        return ids;\n    }\n}\nexports.BaseGraph = BaseGraph;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $SU = require(\"../utils/StructUtils\");\nfunction initializeDistsWithEdges(graph) {\n    let dists = {}, edges = $SU.mergeObjects([graph.getDirEdges(), graph.getUndEdges()]);\n    for (let edge in edges) {\n        let a = edges[edge].getNodes().a.getID();\n        let b = edges[edge].getNodes().b.getID();\n        if (dists[a] == null)\n            dists[a] = {};\n        dists[a][b] = (isNaN(edges[edge].getWeight()) ? 1 : edges[edge].getWeight());\n        if (!edges[edge].isDirected()) {\n            if (dists[b] == null)\n                dists[b] = {};\n            dists[b][a] = (isNaN(edges[edge].getWeight()) ? 1 : edges[edge].getWeight());\n        }\n    }\n    return dists;\n}\nfunction FloydWarshallAPSP(graph) {\n    if (graph.nrDirEdges() === 0 && graph.nrUndEdges() === 0) {\n        throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n    }\n    let dists = graph.adjListArray();\n    let next = graph.nextArray();\n    let N = dists.length;\n    for (var k = 0; k < N; ++k) {\n        for (var i = 0; i < N; ++i) {\n            for (var j = 0; j < N; ++j) {\n                if (k != i && k != j && i != j && dists[i][j] == (dists[i][k] + dists[k][j])) {\n                    if (dists[i][j] !== Number.POSITIVE_INFINITY) {\n                        next[i][j] = $SU.mergeOrderedArraysNoDups(next[i][j], next[i][k]);\n                    }\n                }\n                if (k != i && k != j && i != j && dists[i][j] > dists[i][k] + dists[k][j]) {\n                    next[i][j] = next[i][k].slice(0);\n                    dists[i][j] = dists[i][k] + dists[k][j];\n                }\n            }\n        }\n    }\n    return [dists, next];\n}\nexports.FloydWarshallAPSP = FloydWarshallAPSP;\nfunction FloydWarshallArray(graph) {\n    if (graph.nrDirEdges() === 0 && graph.nrUndEdges() === 0) {\n        throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n    }\n    let dists = graph.adjListArray();\n    let N = dists.length;\n    for (var k = 0; k < N; ++k) {\n        for (var i = 0; i < N; ++i) {\n            for (var j = 0; j < N; ++j) {\n                if (k != i && k != j && i != j && dists[i][j] > dists[i][k] + dists[k][j]) {\n                    dists[i][j] = dists[i][k] + dists[k][j];\n                }\n            }\n        }\n    }\n    return dists;\n}\nexports.FloydWarshallArray = FloydWarshallArray;\nfunction FloydWarshallDict(graph) {\n    if (graph.nrDirEdges() === 0 && graph.nrUndEdges() === 0) {\n        throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n    }\n    let dists = initializeDistsWithEdges(graph);\n    for (var k in dists) {\n        for (var i in dists) {\n            for (var j in dists) {\n                if (i === j) {\n                    continue;\n                }\n                if (dists[i][k] == null || dists[k][j] == null) {\n                    continue;\n                }\n                if ((!dists[i][j] && dists[i][j] != 0) || (dists[i][j] > dists[i][k] + dists[k][j])) {\n                    dists[i][j] = dists[i][k] + dists[k][j];\n                }\n            }\n        }\n    }\n    return dists;\n}\nexports.FloydWarshallDict = FloydWarshallDict;\nfunction changeNextToDirectParents(input) {\n    let output = [];\n    for (let a = 0; a < input.length; a++) {\n        output.push([]);\n        for (let b = 0; b < input.length; b++) {\n            output[a].push([]);\n            output[a][b] = input[a][b];\n        }\n    }\n    for (let a = 0; a < input.length; a++) {\n        for (let b = 0; b < input.length; b++) {\n            if (input[a][b][0] == null) {\n                continue;\n            }\n            else if (a != b && !(input[a][b].length === 1 && input[a][b][0] === b)) {\n                output[a][b] = [];\n                findDirectParents(a, b, input, output);\n            }\n        }\n    }\n    return output;\n}\nexports.changeNextToDirectParents = changeNextToDirectParents;\nfunction findDirectParents(u, v, inNext, outNext) {\n    let nodesInTracking = [u];\n    let counter = 0;\n    while (nodesInTracking.length > 0) {\n        let currNode = nodesInTracking.pop();\n        if (currNode == u && counter > 0) {\n            continue;\n        }\n        else {\n            for (let e = 0; e < inNext[currNode][v].length; e++) {\n                if (inNext[currNode][v][e] == v && counter == 0) {\n                    outNext[u][v] = $SU.mergeOrderedArraysNoDups(outNext[u][v], [v]);\n                }\n                else if (inNext[currNode][v][e] == v) {\n                    outNext[u][v] = $SU.mergeOrderedArraysNoDups(outNext[u][v], [currNode]);\n                }\n                else {\n                    nodesInTracking = $SU.mergeOrderedArraysNoDups(nodesInTracking, [inNext[currNode][v][e]]);\n                }\n            }\n        }\n        counter++;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $FW = require(\"../search/FloydWarshall\");\nconst $JO = require(\"../search/Johnsons\");\nfunction betweennessCentrality(graph, directed, sparse) {\n    let paths;\n    var sparse = sparse || false;\n    if (sparse) {\n        paths = $JO.Johnsons(graph)[1];\n    }\n    else {\n        paths = $FW.changeNextToDirectParents($FW.FloydWarshallAPSP(graph)[1]);\n    }\n    let nodes = graph.getNodes();\n    let nodeKeys = Object.keys(nodes);\n    let map = {};\n    for (let key in nodes) {\n        map[key] = 0;\n    }\n    let N = paths.length;\n    for (var a = 0; a < N; ++a) {\n        for (var b = 0; b < N; ++b) {\n            if (a != b && !(paths[a][b].length == 1 && paths[a][b][0] == b) && paths[a][b][0] != null) {\n                let tempMap = {};\n                let leadArray = [];\n                let pathCount = 0;\n                do {\n                    let tracer = b;\n                    let leadCounter = 0;\n                    pathCount++;\n                    while (true) {\n                        let previous = paths[a][tracer];\n                        let terminate = false;\n                        if (previous.length == 1 && previous[0] == tracer) {\n                            break;\n                        }\n                        else if (previous.length == 1) {\n                            tracer = previous[0];\n                            tracer in tempMap ? tempMap[tracer] += 1 : tempMap[tracer] = 1;\n                        }\n                        if (previous.length > 1) {\n                            if (leadArray.length == 0) {\n                                leadArray.push([0, previous.length]);\n                                if (previous[0] == tracer) {\n                                    terminate = true;\n                                }\n                                else {\n                                    tracer = previous[0];\n                                    tracer in tempMap ? tempMap[tracer] += 1 : tempMap[tracer] = 1;\n                                }\n                                leadCounter++;\n                            }\n                            else if (leadCounter < leadArray.length) {\n                                let choice = leadArray[leadCounter][0];\n                                if (previous[choice] == tracer) {\n                                    terminate = true;\n                                }\n                                else {\n                                    tracer = previous[choice];\n                                    tracer in tempMap ? tempMap[tracer] += 1 : tempMap[tracer] = 1;\n                                }\n                                leadCounter++;\n                            }\n                            else {\n                                leadArray.push([0, previous.length]);\n                                if (previous[0] == tracer) {\n                                    terminate = true;\n                                }\n                                else {\n                                    tracer = previous[0];\n                                    tracer in tempMap ? tempMap[tracer] += 1 : tempMap[tracer] = 1;\n                                }\n                                leadCounter++;\n                            }\n                        }\n                        if (terminate) {\n                            break;\n                        }\n                    }\n                    if (leadArray.length > 0) {\n                        leadArray[leadArray.length - 1][0]++;\n                        while (leadArray[leadArray.length - 1][0] == leadArray[leadArray.length - 1][1]) {\n                            leadArray.splice(leadArray.length - 1, 1);\n                            if (leadArray.length == 0) {\n                                break;\n                            }\n                            leadArray[leadArray.length - 1][0]++;\n                        }\n                    }\n                } while (leadArray.length != 0);\n                for (let key in tempMap) {\n                    let mapKey = nodeKeys[key];\n                    map[mapKey] += tempMap[key] / pathCount;\n                }\n            }\n        }\n    }\n    return map;\n}\nexports.betweennessCentrality = betweennessCentrality;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $N = require(\"../core/Nodes\");\nconst $P = require(\"../search/PFS\");\nconst $BF = require(\"../search/BellmanFord\");\nconst $JO = require(\"../search/Johnsons\");\nconst $BH = require(\"../datastructs/BinaryHeap\");\nclass Brandes {\n    constructor(_graph) {\n        this._graph = _graph;\n    }\n    computeUnweighted(normalize = false, directed = false) {\n        if (this._graph.nrDirEdges() === 0 && this._graph.nrUndEdges() === 0) {\n            throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n        }\n        let nodes = this._graph.getNodes();\n        let adjList = this._graph.adjListDict();\n        let s, v, w, Pred = {}, sigma = {}, delta = {}, dist = {}, Q = [], S = [], CB = {};\n        let closedNodes = {};\n        for (let n in nodes) {\n            let node_id = nodes[n].getID();\n            CB[node_id] = 0;\n            dist[node_id] = Number.POSITIVE_INFINITY;\n            sigma[node_id] = 0;\n            delta[node_id] = 0;\n            Pred[node_id] = [];\n            closedNodes[node_id] = false;\n        }\n        for (let i in nodes) {\n            s = nodes[i];\n            let id = s.getID();\n            dist[id] = 0;\n            sigma[id] = 1;\n            Q.push(id);\n            closedNodes[id] = true;\n            let counter = 0;\n            while (Q.length) {\n                v = Q.shift();\n                S.push(v);\n                let neighbors = adjList[v];\n                closedNodes[v] = true;\n                for (let w in neighbors) {\n                    if (closedNodes[w]) {\n                        continue;\n                    }\n                    if (dist[w] === Number.POSITIVE_INFINITY) {\n                        Q.push(w);\n                        dist[w] = dist[v] + 1;\n                    }\n                    if (dist[w] === dist[v] + 1) {\n                        sigma[w] += sigma[v];\n                        Pred[w].push(v);\n                    }\n                }\n            }\n            while (S.length >= 1) {\n                w = S.pop();\n                for (let parent of Pred[w]) {\n                    delta[parent] += (sigma[parent] / sigma[w] * (1 + delta[w]));\n                }\n                if (w != s.getID()) {\n                    CB[w] += delta[w];\n                }\n                sigma[w] = 0;\n                delta[w] = 0;\n                dist[w] = Number.POSITIVE_INFINITY;\n                Pred[w] = [];\n                closedNodes[w] = false;\n            }\n        }\n        if (normalize) {\n            this.normalizeScores(CB, this._graph.nrNodes(), directed);\n        }\n        return CB;\n    }\n    computeWeighted(normalize, directed) {\n        if (this._graph.nrDirEdges() === 0 && this._graph.nrUndEdges() === 0) {\n            throw new Error(\"Cowardly refusing to traverse graph without edges.\");\n        }\n        if (this._graph.hasNegativeEdge()) {\n            var extraNode = new $N.BaseNode(\"extraNode\");\n            let graph = $JO.addExtraNandE(this._graph, extraNode);\n            let BFresult = $BF.BellmanFordDict(graph, extraNode);\n            if (BFresult.neg_cycle) {\n                throw new Error(\"The graph contains a negative cycle, thus it can not be processed\");\n            }\n            else {\n                let newWeights = BFresult.distances;\n                graph = $JO.reWeighGraph(graph, newWeights, extraNode);\n                graph.deleteNode(extraNode);\n            }\n            this._graph = graph;\n        }\n        let nodes = this._graph.getNodes();\n        let N = Object.keys(nodes).length;\n        let adjList = this._graph.adjListDict();\n        const evalPriority = (nb) => nb.best;\n        const evalObjID = (nb) => nb.id;\n        let s, v, w, Pred = {}, sigma = {}, delta = {}, dist = {}, S = [], CB = {}, closedNodes = {}, Q = new $BH.BinaryHeap($BH.BinaryHeapMode.MIN, evalPriority, evalObjID);\n        for (let n in nodes) {\n            let currID = nodes[n].getID();\n            CB[currID] = 0;\n            dist[currID] = Number.POSITIVE_INFINITY;\n            sigma[currID] = 0;\n            delta[currID] = 0;\n            Pred[currID] = [];\n            closedNodes[currID] = false;\n        }\n        for (let i in nodes) {\n            s = nodes[i];\n            let id_s = s.getID();\n            dist[id_s] = 0;\n            sigma[id_s] = 1;\n            let source = { id: id_s, best: 0 };\n            Q.insert(source);\n            closedNodes[id_s] = true;\n            while (Q.size() > 0) {\n                v = Q.pop();\n                let current_id = v.id;\n                S.push(current_id);\n                closedNodes[current_id] = true;\n                let neighbors = adjList[current_id];\n                for (let w in neighbors) {\n                    if (closedNodes[w]) {\n                        continue;\n                    }\n                    let new_dist = dist[current_id] + neighbors[w];\n                    let nextNode = { id: w, best: dist[w] };\n                    if (dist[w] > new_dist) {\n                        if (isFinite(dist[w])) {\n                            let x = Q.remove(nextNode);\n                            nextNode.best = new_dist;\n                            Q.insert(nextNode);\n                        }\n                        else {\n                            nextNode.best = new_dist;\n                            Q.insert(nextNode);\n                        }\n                        sigma[w] = 0;\n                        dist[w] = new_dist;\n                        Pred[w] = [];\n                    }\n                    if (dist[w] === new_dist) {\n                        sigma[w] += sigma[current_id];\n                        Pred[w].push(current_id);\n                    }\n                }\n            }\n            while (S.length >= 1) {\n                w = S.pop();\n                for (let parent of Pred[w]) {\n                    delta[parent] += (sigma[parent] / sigma[w] * (1 + delta[w]));\n                }\n                if (w != s.getID()) {\n                    CB[w] += delta[w];\n                }\n                sigma[w] = 0;\n                delta[w] = 0;\n                dist[w] = Number.POSITIVE_INFINITY;\n                Pred[w] = [];\n                closedNodes[w] = false;\n            }\n        }\n        if (normalize) {\n            this.normalizeScores(CB, N, directed);\n        }\n        return CB;\n    }\n    computePFSbased(normalize, directed) {\n        let nodes = this._graph.getNodes();\n        let adjList = this._graph.adjListDict();\n        let Pred = {}, sigma = {}, delta = {}, S = [], CB = {};\n        for (let n in nodes) {\n            let currID = nodes[n].getID();\n            CB[currID] = 0;\n            sigma[currID] = 0;\n            delta[currID] = 0;\n            Pred[currID] = [];\n        }\n        let specialConfig = $P.preparePFSStandardConfig();\n        var notEncounteredBrandes = function (context) {\n            context.next.best =\n                context.current.best + (isNaN(context.next.edge.getWeight()) ? $P.DEFAULT_WEIGHT : context.next.edge.getWeight());\n            let next_id = context.next.node.getID();\n            let current_id = context.current.node.getID();\n            Pred[next_id] = [current_id];\n            sigma[next_id] += sigma[current_id];\n        };\n        specialConfig.callbacks.not_encountered.splice(0, 1, notEncounteredBrandes);\n        var newCurrentBrandes = function (context) {\n            S.push(context.current.node.getID());\n        };\n        specialConfig.callbacks.new_current.push(newCurrentBrandes);\n        var betterPathBrandes = function (context) {\n            let next_id = context.next.node.getID();\n            let current_id = context.current.node.getID();\n            sigma[next_id] = 0;\n            sigma[next_id] += sigma[current_id];\n            Pred[next_id] = [];\n            Pred[next_id].push(current_id);\n        };\n        specialConfig.callbacks.better_path.splice(0, 1, betterPathBrandes);\n        var equalPathBrandes = function (context) {\n            let next_id = context.next.node.getID();\n            let current_id = context.current.node.getID();\n            sigma[next_id] += sigma[current_id];\n            if (Pred[next_id].indexOf(current_id) === -1) {\n                Pred[next_id].push(current_id);\n            }\n        };\n        specialConfig.callbacks.equal_path.push(equalPathBrandes);\n        for (let i in nodes) {\n            let s = nodes[i];\n            sigma[s.getID()] = 1;\n            $P.PFS(this._graph, s, specialConfig);\n            while (S.length >= 1) {\n                let w = S.pop();\n                for (let parent of Pred[w]) {\n                    delta[parent] += (sigma[parent] / sigma[w] * (1 + delta[w]));\n                }\n                if (w != s.getID()) {\n                    CB[w] += delta[w];\n                }\n                sigma[w] = 0;\n                delta[w] = 0;\n                Pred[w] = [];\n            }\n        }\n        if (normalize) {\n            this.normalizeScores(CB, this._graph.nrNodes(), directed);\n        }\n        return CB;\n    }\n    normalizeScores(CB, N, directed) {\n        let factor = directed ? ((N - 1) * (N - 2)) : ((N - 1) * (N - 2) / 2);\n        for (let node in CB) {\n            CB[node] /= factor;\n        }\n    }\n}\nexports.Brandes = Brandes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $PFS = require(\"../search/PFS\");\nconst $FW = require(\"../search/FloydWarshall\");\nclass ClosenessCentrality {\n    constructor() { }\n    getCentralityMapFW(graph) {\n        let dists = $FW.FloydWarshallArray(graph);\n        let ret = [];\n        let N = dists.length;\n        for (let a = 0; a < N; ++a) {\n            let sum = 0;\n            for (let b = 0; b < N; ++b) {\n                if (dists[a][b] != Number.POSITIVE_INFINITY)\n                    sum += dists[a][b];\n            }\n            ret[a] = 1 / sum;\n        }\n        return ret;\n    }\n    getCentralityMap(graph) {\n        let pfs_config = $PFS.preparePFSStandardConfig();\n        let accumulated_distance = 0;\n        let not_encountered = function (context) {\n            accumulated_distance += context.current.best + (isNaN(context.next.edge.getWeight()) ? 1 : context.next.edge.getWeight());\n        };\n        var betterPathFound = function (context) {\n            accumulated_distance -= pfs_config.result[context.next.node.getID()].distance - context.proposed_dist;\n        };\n        let bp = pfs_config.callbacks.better_path.pop();\n        pfs_config.callbacks.better_path.push(betterPathFound);\n        pfs_config.callbacks.better_path.push(bp);\n        pfs_config.callbacks.not_encountered.push(not_encountered);\n        let ret = {};\n        for (let key in graph.getNodes()) {\n            let node = graph.getNodeById(key);\n            if (node != null) {\n                accumulated_distance = 0;\n                $PFS.PFS(graph, node, pfs_config);\n                ret[key] = 1 / accumulated_distance;\n            }\n        }\n        return ret;\n    }\n}\nexports.ClosenessCentrality = ClosenessCentrality;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $SU = require(\"../utils/StructUtils\");\nvar DegreeMode;\n(function (DegreeMode) {\n    DegreeMode[DegreeMode[\"in\"] = 0] = \"in\";\n    DegreeMode[DegreeMode[\"out\"] = 1] = \"out\";\n    DegreeMode[DegreeMode[\"und\"] = 2] = \"und\";\n    DegreeMode[DegreeMode[\"dir\"] = 3] = \"dir\";\n    DegreeMode[DegreeMode[\"all\"] = 4] = \"all\";\n})(DegreeMode = exports.DegreeMode || (exports.DegreeMode = {}));\nclass DegreeCentrality {\n    constructor() { }\n    getCentralityMap(graph, weighted, conf) {\n        weighted = (weighted != null) ? !!weighted : true;\n        conf = (conf == null) ? DegreeMode.all : conf;\n        let ret = {};\n        switch (conf) {\n            case DegreeMode.in:\n                for (let key in graph.getNodes()) {\n                    let node = graph.getNodeById(key);\n                    if (node != null) {\n                        if (!weighted) {\n                            ret[key] = node.inDegree();\n                        }\n                        else {\n                            ret[key] = ret[key] || 0;\n                            for (let k in node.inEdges()) {\n                                ret[key] += node.inEdges()[k].getWeight();\n                            }\n                        }\n                    }\n                }\n                break;\n            case DegreeMode.out:\n                for (let key in graph.getNodes()) {\n                    let node = graph.getNodeById(key);\n                    if (node != null) {\n                        if (!weighted) {\n                            ret[key] = node.outDegree();\n                        }\n                        else {\n                            ret[key] = ret[key] || 0;\n                            for (let k in node.outEdges()) {\n                                ret[key] += node.outEdges()[k].getWeight();\n                            }\n                        }\n                    }\n                }\n                break;\n            case DegreeMode.und:\n                for (let key in graph.getNodes()) {\n                    let node = graph.getNodeById(key);\n                    if (node != null) {\n                        if (!weighted) {\n                            ret[key] = node.degree();\n                        }\n                        else {\n                            ret[key] = ret[key] || 0;\n                            for (let k in node.undEdges()) {\n                                ret[key] += node.undEdges()[k].getWeight();\n                            }\n                        }\n                    }\n                }\n                break;\n            case DegreeMode.dir:\n                for (let key in graph.getNodes()) {\n                    let node = graph.getNodeById(key);\n                    if (node != null) {\n                        if (!weighted) {\n                            ret[key] = node.inDegree() + node.outDegree();\n                        }\n                        else {\n                            ret[key] = ret[key] || 0;\n                            let comb = $SU.mergeObjects([node.inEdges(), node.outEdges()]);\n                            for (let k in comb) {\n                                ret[key] += comb[k].getWeight();\n                            }\n                        }\n                    }\n                }\n                break;\n            case DegreeMode.all:\n                for (let key in graph.getNodes()) {\n                    let node = graph.getNodeById(key);\n                    if (node != null) {\n                        if (!weighted) {\n                            ret[key] = node.degree() + node.inDegree() + node.outDegree();\n                        }\n                        else {\n                            ret[key] = ret[key] || 0;\n                            let comb = $SU.mergeObjects([node.inEdges(), node.outEdges(), node.undEdges()]);\n                            for (let k in comb) {\n                                ret[key] += comb[k].getWeight();\n                            }\n                        }\n                    }\n                }\n                break;\n        }\n        return ret;\n    }\n    degreeDistribution(graph) {\n        var max_deg = 0, key, nodes = graph.getNodes(), node, all_deg;\n        for (key in nodes) {\n            node = nodes[key];\n            all_deg = node.inDegree() + node.outDegree() + node.degree() + 1;\n            max_deg = all_deg > max_deg ? all_deg : max_deg;\n        }\n        var deg_dist = {\n            in: new Uint32Array(max_deg),\n            out: new Uint32Array(max_deg),\n            dir: new Uint32Array(max_deg),\n            und: new Uint32Array(max_deg),\n            all: new Uint32Array(max_deg)\n        };\n        for (key in nodes) {\n            node = nodes[key];\n            deg_dist.in[node.inDegree()]++;\n            deg_dist.out[node.outDegree()]++;\n            deg_dist.dir[node.inDegree() + node.outDegree()]++;\n            deg_dist.und[node.degree()]++;\n            deg_dist.all[node.inDegree() + node.outDegree() + node.degree()]++;\n        }\n        return deg_dist;\n    }\n}\nexports.DegreeCentrality = DegreeCentrality;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst StructUtils_1 = require(\"../utils/StructUtils\");\nconst Logger_1 = require(\"../utils/Logger\");\nconst logger = new Logger_1.Logger();\nconst DEFAULT_WEIGHTED = false;\nconst DEFAULT_ALPHA = 0.15;\nconst DEFAULT_MAX_ITERATIONS = 1e3;\nconst DEFAULT_EPSILON = 1e-6;\nconst DEFAULT_NORMALIZE = false;\nconst defaultInit = (graph) => 1 / graph.nrNodes();\nclass Pagerank {\n    constructor(_graph, config) {\n        this._graph = _graph;\n        config = config || {};\n        this._weighted = config.weighted || DEFAULT_WEIGHTED;\n        this._alpha = config.alpha || DEFAULT_ALPHA;\n        this._maxIterations = config.iterations || DEFAULT_MAX_ITERATIONS;\n        this._epsilon = config.epsilon || DEFAULT_EPSILON;\n        this._normalize = config.normalize || DEFAULT_NORMALIZE;\n        this._personalized = config.personalized ? config.personalized : false;\n        if (this._personalized && !config.tele_set) {\n            throw Error(\"Personalized Pagerank requires tele_set as a config argument\");\n        }\n        if (config.init_map && Object.keys(config.init_map).length !== this._graph.nrNodes()) {\n            throw Error(\"init_map config parameter must be of size |nodes|\");\n        }\n        this._PRArrayDS = config.PRArrays || {\n            curr: [],\n            old: [],\n            out_deg: [],\n            pull: [],\n            pull_weight: this._weighted ? [] : null,\n            teleport: config.tele_set ? [] : null,\n            tele_size: config.tele_set ? 0 : null\n        };\n        config.PRArrays || this.constructPRArrayDataStructs(config);\n    }\n    getConfig() {\n        return {\n            _weighted: this._weighted,\n            _alpha: this._alpha,\n            _maxIterations: this._maxIterations,\n            _epsilon: this._epsilon,\n            _normalize: this._normalize,\n        };\n    }\n    getDSs() {\n        return this._PRArrayDS;\n    }\n    constructPRArrayDataStructs(config) {\n        let tic = +new Date;\n        let nodes = this._graph.getNodes();\n        let i = 0;\n        let teleport_prob_sum = 0;\n        let init_sum = 0;\n        for (let key in nodes) {\n            let node = this._graph.getNodeById(key);\n            node.setFeature('PR_index', i);\n            if (config.init_map) {\n                if (config.init_map[key] == null) {\n                    throw Error(\"initial value must be given for each node in the graph.\");\n                }\n                let val = config.init_map[key];\n                this._PRArrayDS.curr[i] = val;\n                this._PRArrayDS.old[i] = val;\n                init_sum += val;\n            }\n            else {\n                this._PRArrayDS.curr[i] = defaultInit(this._graph);\n                this._PRArrayDS.old[i] = defaultInit(this._graph);\n            }\n            this._PRArrayDS.out_deg[i] = node.outDegree() + node.degree();\n            if (this._personalized) {\n                let tele_prob_node = config.tele_set[node.getID()] || 0;\n                this._PRArrayDS.teleport[i] = tele_prob_node;\n                teleport_prob_sum += tele_prob_node;\n                tele_prob_node && this._PRArrayDS.tele_size++;\n            }\n            ++i;\n        }\n        if (config.init_map && init_sum !== 1) {\n            this._PRArrayDS.curr = this._PRArrayDS.curr.map(n => n /= init_sum);\n            this._PRArrayDS.old = this._PRArrayDS.old.map(n => n /= init_sum);\n        }\n        if (this._personalized && teleport_prob_sum !== 1) {\n            this._PRArrayDS.teleport = this._PRArrayDS.teleport.map(n => n /= teleport_prob_sum);\n        }\n        for (let key in nodes) {\n            let node = this._graph.getNodeById(key);\n            let node_idx = node.getFeature('PR_index');\n            let pull_i = [];\n            let pull_weight_i = [];\n            let incoming_edges = StructUtils_1.mergeObjects([node.inEdges(), node.undEdges()]);\n            for (let edge_key in incoming_edges) {\n                let edge = incoming_edges[edge_key];\n                let source = edge.getNodes().a;\n                if (edge.getNodes().a.getID() == node.getID()) {\n                    source = edge.getNodes().b;\n                }\n                let parent_idx = source.getFeature('PR_index');\n                if (this._weighted) {\n                    pull_weight_i.push(edge.getWeight());\n                }\n                pull_i.push(parent_idx);\n            }\n            this._PRArrayDS.pull[node_idx] = pull_i;\n            if (this._weighted) {\n                this._PRArrayDS.pull_weight[node_idx] = pull_weight_i;\n            }\n        }\n        let toc = +new Date;\n        logger.log(`PR Array DS init took ${toc - tic} ms.`);\n    }\n    getRankMapFromArray() {\n        let result = {};\n        let nodes = this._graph.getNodes();\n        if (this._normalize) {\n            this.normalizePR();\n        }\n        for (let key in nodes) {\n            let node_val = this._PRArrayDS.curr[nodes[key].getFeature('PR_index')];\n            result[key] = node_val;\n        }\n        return result;\n    }\n    normalizePR() {\n        let pr_sum = this._PRArrayDS.curr.reduce((i, j) => i + j, 0);\n        if (pr_sum !== 1) {\n            this._PRArrayDS.curr = this._PRArrayDS.curr.map(n => n / pr_sum);\n        }\n    }\n    pull2DTo1D() {\n        let p1d = [];\n        let p2d = this._PRArrayDS.pull;\n        for (let n in p2d) {\n            for (let i of p2d[n]) {\n                p1d.push(i);\n            }\n            +n !== p2d.length - 1 && p1d.push(-1);\n        }\n        return p1d;\n    }\n    computePR() {\n        const ds = this._PRArrayDS;\n        const N = this._graph.nrNodes();\n        let visits = 0;\n        for (let i = 0; i < this._maxIterations; ++i) {\n            let delta_iter = 0.0;\n            for (let node in ds.curr) {\n                let pull_rank = 0;\n                visits++;\n                let idx = 0;\n                for (let source of ds.pull[node]) {\n                    visits++;\n                    if (ds.out_deg[source] === 0) {\n                        logger.log(`Node: ${node}`);\n                        logger.log(`Source: ${source} `);\n                        throw ('Encountered zero divisor!');\n                    }\n                    let weight = this._weighted ? ds.pull_weight[node][idx++] : 1.0;\n                    pull_rank += ds.old[source] * weight / ds.out_deg[source];\n                }\n                let link_pr = (1 - this._alpha) * pull_rank;\n                if (this._personalized) {\n                    let jump_chance = ds.teleport[node] / ds.tele_size;\n                    ds.curr[node] = link_pr + jump_chance;\n                }\n                else {\n                    ds.curr[node] = link_pr + this._alpha / N;\n                }\n                delta_iter += Math.abs(ds.curr[node] - ds.old[node]);\n            }\n            if (delta_iter <= this._epsilon) {\n                return this.getRankMapFromArray();\n            }\n            ds.old = [...ds.curr];\n        }\n        return this.getRankMapFromArray();\n    }\n}\nexports.Pagerank = Pagerank;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst https = require(\"https\");\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger();\nconst SSL_PORT = '443';\nfunction retrieveRemoteFile(config, cb) {\n    if (typeof cb !== 'function') {\n        throw new Error('Provided callback is not a function.');\n    }\n    logger.log(`Requesting file via NodeJS request: ${config.remote_host}${config.remote_path}${config.file_name}`);\n    let options = {\n        host: config.remote_host,\n        port: SSL_PORT,\n        path: config.remote_path + config.file_name,\n        method: 'GET'\n    };\n    let req = https.get(options, response => {\n        var body = '';\n        response.setEncoding('utf8');\n        response.on('data', function (d) {\n            body += d;\n        });\n        response.on('end', function () {\n            cb(body);\n        });\n    });\n    req.on('error', e => {\n        logger.log(`Request error: ${e.message}`);\n    });\n    return req;\n}\nexports.retrieveRemoteFile = retrieveRemoteFile;\nfunction checkNodeEnvironment() {\n    if (typeof window !== 'undefined') {\n        throw new Error('When in Browser, do as the Browsers do! (use fetch and call readFromJSON() directly...) ');\n    }\n}\nexports.checkNodeEnvironment = checkNodeEnvironment;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst $G = require(\"../../core/Graph\");\nconst $R = require(\"../../utils/RemoteUtils\");\nconst Logger_1 = require(\"../../utils/Logger\");\nlet logger = new Logger_1.Logger();\nconst DEFAULT_WEIGHT = 1;\nconst CSV_EXTENSION = \".csv\";\nclass CSVInput {\n    constructor(config) {\n        this._config = config || {\n            separator: config && config.separator || ',',\n            explicit_direction: config && config.explicit_direction || true,\n            direction_mode: config && config.direction_mode || false,\n            weighted: config && config.weighted || false\n        };\n    }\n    readFromAdjacencyListURL(config, cb) {\n        this.readGraphFromURL(config, cb, this.readFromAdjacencyList);\n    }\n    readFromEdgeListURL(config, cb) {\n        this.readGraphFromURL(config, cb, this.readFromEdgeList);\n    }\n    readGraphFromURL(config, cb, localFun) {\n        var self = this, graph_name = config.file_name, graph, request;\n        $R.checkNodeEnvironment();\n        $R.retrieveRemoteFile(config, function (raw_graph) {\n            var input = raw_graph.toString().split('\\n');\n            graph = localFun.apply(self, [input, graph_name]);\n            cb(graph, undefined);\n        });\n    }\n    readFromAdjacencyListFile(filepath) {\n        return this.readFileAndReturn(filepath, this.readFromAdjacencyList);\n    }\n    readFromEdgeListFile(filepath) {\n        return this.readFileAndReturn(filepath, this.readFromEdgeList);\n    }\n    readFileAndReturn(filepath, func) {\n        $R.checkNodeEnvironment();\n        var graph_name = path.basename(filepath);\n        var input = fs.readFileSync(filepath).toString().split('\\n');\n        return func.apply(this, [input, graph_name]);\n    }\n    readFromAdjacencyList(input, graph_name) {\n        var graph = new $G.BaseGraph(graph_name);\n        for (var idx in input) {\n            var line = input[idx], elements = this._config.separator.match(/\\s+/g) ? line.match(/\\S+/g) : line.replace(/\\s+/g, '').split(this._config.separator), node_id = elements[0], node, edge_array = elements.slice(1), edge, target_node_id, target_node, dir_char, directed, edge_id, edge_id_u2;\n            if (!node_id) {\n                continue;\n            }\n            node = graph.hasNodeID(node_id) ? graph.getNodeById(node_id) : graph.addNodeByID(node_id);\n            for (var e = 0; e < edge_array.length;) {\n                if (this._config.explicit_direction && (!edge_array || edge_array.length % 2)) {\n                    throw new Error('Every edge entry has to contain its direction info in explicit mode.');\n                }\n                target_node_id = edge_array[e++];\n                target_node = graph.hasNodeID(target_node_id) ? graph.getNodeById(target_node_id) : graph.addNodeByID(target_node_id);\n                dir_char = this._config.explicit_direction ? edge_array[e++] : this._config.direction_mode ? 'd' : 'u';\n                if (dir_char !== 'd' && dir_char !== 'u') {\n                    throw new Error(\"Specification of edge direction invalid (d and u are valid).\");\n                }\n                directed = dir_char === 'd';\n                edge_id = node_id + \"_\" + target_node_id + \"_\" + dir_char;\n                edge_id_u2 = target_node_id + \"_\" + node_id + \"_\" + dir_char;\n                if (graph.hasEdgeID(edge_id) || (!directed && graph.hasEdgeID(edge_id_u2))) {\n                    continue;\n                }\n                else {\n                    edge = graph.addEdgeByID(edge_id, node, target_node, { directed: directed });\n                }\n            }\n        }\n        return graph;\n    }\n    readFromEdgeList(input, graph_name, weighted = false) {\n        var graph = new $G.BaseGraph(graph_name);\n        for (var idx in input) {\n            var line = input[idx], elements = this._config.separator.match(/\\s+/g) ? line.match(/\\S+/g) : line.replace(/\\s+/g, '').split(this._config.separator);\n            if (!elements) {\n                continue;\n            }\n            if (elements.length < 2 || elements.length > 3) {\n                logger.log(elements);\n                throw new Error('Edge list is in wrong format - every line has to consist of two entries (the 2 nodes)');\n            }\n            var node_id = elements[0], node, target_node, edge, target_node_id = elements[1], dir_char = this._config.explicit_direction ? elements[2] : this._config.direction_mode ? 'd' : 'u', directed, edge_id, edge_id_u2, parse_weight, edge_weight;\n            node = graph.hasNodeID(node_id) ? graph.getNodeById(node_id) : graph.addNodeByID(node_id);\n            target_node = graph.hasNodeID(target_node_id) ? graph.getNodeById(target_node_id) : graph.addNodeByID(target_node_id);\n            if (dir_char !== 'd' && dir_char !== 'u') {\n                throw new Error(\"Specification of edge direction invalid (d and u are valid).\");\n            }\n            directed = dir_char === 'd';\n            edge_id = node_id + \"_\" + target_node_id + \"_\" + dir_char;\n            edge_id_u2 = target_node_id + \"_\" + node_id + \"_\" + dir_char;\n            parse_weight = parseFloat(elements[2]);\n            edge_weight = this._config.weighted ? (isNaN(parse_weight) ? DEFAULT_WEIGHT : parse_weight) : null;\n            if (graph.hasEdgeID(edge_id) || (!directed && graph.hasEdgeID(edge_id_u2))) {\n                continue;\n            }\n            else if (this._config.weighted) {\n                edge = graph.addEdgeByID(edge_id, node, target_node, { directed: directed, weighted: true, weight: edge_weight });\n            }\n            else {\n                edge = graph.addEdgeByID(edge_id, node, target_node, { directed: directed });\n            }\n        }\n        return graph;\n    }\n}\nexports.CSVInput = CSVInput;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nclass CSVOutput {\n    constructor(config) {\n        this._config = config || {\n            separator: config && config.separator || ',',\n            explicit_direction: config && config.explicit_direction || true,\n            direction_mode: config && config.direction_mode || false\n        };\n    }\n    writeToAdjacencyListFile(filepath, graph) {\n        if (typeof window !== 'undefined' && window !== null) {\n            throw new Error('cannot write to File inside of Browser');\n        }\n        fs.writeFileSync(filepath, this.writeToAdjacencyList(graph));\n    }\n    writeToAdjacencyList(graph) {\n        let graphString = \"\";\n        let nodes = graph.getNodes(), node = null, adj_nodes = null, adj_node = null;\n        for (let node_key in nodes) {\n            node = nodes[node_key];\n            graphString += node.getID();\n            adj_nodes = node.reachNodes(this.mergeFunc);\n            for (let adj_idx in adj_nodes) {\n                adj_node = adj_nodes[adj_idx].node;\n                graphString += this._config.separator + adj_node.getID();\n            }\n            graphString += \"\\n\";\n        }\n        return graphString;\n    }\n    writeToEdgeListFile(filepath, graph, weighted = false) {\n        if (typeof window !== 'undefined' && window !== null) {\n            throw new Error('cannot write to File inside of Browser');\n        }\n        fs.writeFileSync(filepath, this.writeToEdgeList(graph, weighted));\n    }\n    writeToEdgeList(graph, weighted = false) {\n        let graphString = \"\", nodes = graph.getNodes(), node = null, adj_nodes = null, adj_entry, adj_node = null, weight_str;\n        for (let node_key in nodes) {\n            node = nodes[node_key];\n            adj_nodes = node.reachNodes(this.mergeFunc);\n            for (let adj_idx in adj_nodes) {\n                adj_entry = adj_nodes[adj_idx];\n                adj_node = adj_entry.node;\n                weight_str = '';\n                if (weighted) {\n                    weight_str = this._config.separator;\n                    weight_str += adj_entry.edge.isWeighted() ? adj_entry.edge.getWeight() : 1;\n                }\n                graphString += node.getID() + this._config.separator + adj_node.getID() + weight_str + '\\n';\n            }\n        }\n        return graphString;\n    }\n    mergeFunc(ne) {\n        return ne.node.getID();\n    }\n}\nexports.CSVOutput = CSVOutput;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst $G = require(\"../../core/Graph\");\nconst $R = require(\"../../utils/RemoteUtils\");\nconst Logger_1 = require(\"../../utils/Logger\");\nconst logger = new Logger_1.Logger();\nconst DEFAULT_WEIGHT = 1;\nconst JSON_EXTENSION = \".json\";\nclass JSONInput {\n    constructor(config) {\n        this._config = config || {\n            explicit_direction: config && config.explicit_direction || true,\n            directed: config && config.directed || false,\n            weighted: config && config.weighted || false\n        };\n    }\n    readFromJSONFile(filepath) {\n        $R.checkNodeEnvironment();\n        var json = JSON.parse(fs.readFileSync(filepath).toString());\n        return this.readFromJSON(json);\n    }\n    readFromJSONURL(config, cb) {\n        var self = this, graph, request, json;\n        $R.checkNodeEnvironment();\n        $R.retrieveRemoteFile(config, function (raw_graph) {\n            graph = self.readFromJSON(JSON.parse(raw_graph));\n            cb(graph, undefined);\n        });\n    }\n    readFromJSON(json) {\n        var graph = new $G.BaseGraph(json.name), coords_json, coords, coord_idx, coord_val, features, feature;\n        for (var node_id in json.data) {\n            var node = graph.hasNodeID(node_id) ? graph.getNodeById(node_id) : graph.addNodeByID(node_id);\n            let label = json.data[node_id]['label'];\n            if (label) {\n                node.setLabel(label);\n            }\n            if (features = json.data[node_id].features) {\n                node.setFeatures(features);\n            }\n            if (coords_json = json.data[node_id].coords) {\n                coords = {};\n                for (coord_idx in coords_json) {\n                    coords[coord_idx] = +coords_json[coord_idx];\n                }\n                node.setFeature('coords', coords);\n            }\n            var edges = json.data[node_id].edges;\n            for (let e in edges) {\n                let edge_input = edges[e], target_node_id = edge_input.to, directed = this._config.explicit_direction ? edge_input.directed : this._config.directed, dir_char = directed ? 'd' : 'u', weight_float = this.handleEdgeWeights(edge_input), weight_info = weight_float === weight_float ? weight_float : DEFAULT_WEIGHT, edge_weight = this._config.weighted ? weight_info : undefined, target_node = graph.hasNodeID(target_node_id) ? graph.getNodeById(target_node_id) : graph.addNodeByID(target_node_id);\n                let edge_id = node_id + \"_\" + target_node_id + \"_\" + dir_char, edge_id_u2 = target_node_id + \"_\" + node_id + \"_\" + dir_char;\n                if (graph.hasEdgeID(edge_id)) {\n                    continue;\n                }\n                if ((!directed && graph.hasEdgeID(edge_id_u2))) {\n                    if (this._config.weighted) {\n                        let edge = graph.getEdgeById(edge_id_u2);\n                        if (edge_weight != edge.getWeight()) {\n                            throw new Error('Input JSON flawed! Found duplicate edge with different weights!');\n                        }\n                    }\n                    continue;\n                }\n                else {\n                    var edge = graph.addEdgeByID(edge_id, node, target_node, {\n                        directed: directed,\n                        weighted: this._config.weighted,\n                        weight: edge_weight\n                    });\n                }\n            }\n        }\n        return graph;\n    }\n    handleEdgeWeights(edge_input) {\n        switch (edge_input.weight) {\n            case \"undefined\":\n                return DEFAULT_WEIGHT;\n            case \"Infinity\":\n                return Number.POSITIVE_INFINITY;\n            case \"-Infinity\":\n                return Number.NEGATIVE_INFINITY;\n            case \"MAX\":\n                return Number.MAX_VALUE;\n            case \"MIN\":\n                return Number.MIN_VALUE;\n            default:\n                return parseFloat(edge_input.weight);\n        }\n    }\n}\nexports.JSONInput = JSONInput;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nclass JSONOutput {\n    constructor() { }\n    writeToJSONFile(filepath, graph) {\n        if (typeof window !== 'undefined' && window !== null) {\n            throw new Error('cannot write to File inside of Browser');\n        }\n        fs.writeFileSync(filepath, this.writeToJSONString(graph));\n    }\n    writeToJSONString(graph) {\n        let nodes, node, node_struct, und_edges, dir_edges, edge, coords;\n        var result = {\n            name: graph._label,\n            nodes: graph.nrNodes(),\n            dir_edges: graph.nrDirEdges(),\n            und_edges: graph.nrUndEdges(),\n            data: {}\n        };\n        nodes = graph.getNodes();\n        for (let node_key in nodes) {\n            node = nodes[node_key];\n            node_struct = result.data[node.getID()] = {\n                label: node.getLabel(),\n                edges: []\n            };\n            und_edges = node.undEdges();\n            for (let edge_key in und_edges) {\n                edge = und_edges[edge_key];\n                let connected_nodes = edge.getNodes();\n                node_struct.edges.push({\n                    to: connected_nodes.a.getID() === node.getID() ? connected_nodes.b.getID() : connected_nodes.a.getID(),\n                    directed: edge.isDirected(),\n                    weight: edge.isWeighted() ? edge.getWeight() : undefined\n                });\n            }\n            dir_edges = node.outEdges();\n            for (let edge_key in dir_edges) {\n                edge = dir_edges[edge_key];\n                let connected_nodes = edge.getNodes();\n                node_struct.edges.push({\n                    to: connected_nodes.b.getID(),\n                    directed: edge.isDirected(),\n                    weight: this.handleEdgeWeight(edge)\n                });\n            }\n            node_struct.features = node.getFeatures();\n            if ((coords = node.getFeature('coords')) != null) {\n                node_struct['coords'] = coords;\n            }\n        }\n        return JSON.stringify(result);\n    }\n    handleEdgeWeight(edge) {\n        if (!edge.isWeighted()) {\n            return undefined;\n        }\n        switch (edge.getWeight()) {\n            case Number.POSITIVE_INFINITY:\n                return 'Infinity';\n            case Number.NEGATIVE_INFINITY:\n                return '-Infinity';\n            case Number.MAX_VALUE:\n                return 'MAX';\n            case Number.MIN_VALUE:\n                return 'MIN';\n            default:\n                return edge.getWeight();\n        }\n    }\n}\nexports.JSONOutput = JSONOutput;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $PFS = require(\"../search/PFS\");\nfunction Dijkstra(graph, source, target) {\n    let config = $PFS.preparePFSStandardConfig();\n    if (target) {\n        config.goal_node = target;\n    }\n    return $PFS.PFS(graph, source, config);\n}\nexports.Dijkstra = Dijkstra;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Logger_1 = require(\"../utils/Logger\");\nlet logger = new Logger_1.Logger();\nclass SimplePerturber {\n    constructor(_graph) {\n        this._graph = _graph;\n    }\n    randomlyDeleteNodesPercentage(percentage) {\n        if (percentage > 100) {\n            percentage = 100;\n        }\n        let nr_nodes_to_delete = Math.ceil(this._graph.nrNodes() * percentage / 100);\n        this.randomlyDeleteNodesAmount(nr_nodes_to_delete);\n    }\n    randomlyDeleteUndEdgesPercentage(percentage) {\n        if (percentage > 100) {\n            percentage = 100;\n        }\n        let nr_edges_to_delete = Math.ceil(this._graph.nrUndEdges() * percentage / 100);\n        this.randomlyDeleteUndEdgesAmount(nr_edges_to_delete);\n    }\n    randomlyDeleteDirEdgesPercentage(percentage) {\n        if (percentage > 100) {\n            percentage = 100;\n        }\n        let nr_edges_to_delete = Math.ceil(this._graph.nrDirEdges() * percentage / 100);\n        this.randomlyDeleteDirEdgesAmount(nr_edges_to_delete);\n    }\n    randomlyDeleteNodesAmount(amount) {\n        if (amount < 0) {\n            throw 'Cowardly refusing to remove a negative amount of nodes';\n        }\n        if (this._graph.nrNodes() === 0) {\n            return;\n        }\n        for (let nodeID = 0, randomNodes = this._graph.pickRandomProperties(this._graph.getNodes(), amount); nodeID < randomNodes.length; nodeID++) {\n            this._graph.deleteNode(this._graph.getNodes()[randomNodes[nodeID]]);\n        }\n    }\n    randomlyDeleteUndEdgesAmount(amount) {\n        if (amount < 0) {\n            throw 'Cowardly refusing to remove a negative amount of edges';\n        }\n        if (this._graph.nrUndEdges() === 0) {\n            return;\n        }\n        for (let edgeID = 0, randomEdges = this._graph.pickRandomProperties(this._graph.getUndEdges(), amount); edgeID < randomEdges.length; edgeID++) {\n            this._graph.deleteEdge(this._graph.getUndEdges()[randomEdges[edgeID]]);\n        }\n    }\n    randomlyDeleteDirEdgesAmount(amount) {\n        if (amount < 0) {\n            throw 'Cowardly refusing to remove a negative amount of edges';\n        }\n        if (this._graph.nrDirEdges() === 0) {\n            return;\n        }\n        for (let edgeID = 0, randomEdges = this._graph.pickRandomProperties(this._graph.getDirEdges(), amount); edgeID < randomEdges.length; edgeID++) {\n            this._graph.deleteEdge(this._graph.getDirEdges()[randomEdges[edgeID]]);\n        }\n    }\n    randomlyAddUndEdgesPercentage(percentage) {\n        let nr_und_edges_to_add = Math.ceil(this._graph.nrUndEdges() * percentage / 100);\n        this.randomlyAddEdgesAmount(nr_und_edges_to_add, { directed: false });\n    }\n    randomlyAddDirEdgesPercentage(percentage) {\n        let nr_dir_edges_to_add = Math.ceil(this._graph.nrDirEdges() * percentage / 100);\n        this.randomlyAddEdgesAmount(nr_dir_edges_to_add, { directed: true });\n    }\n    randomlyAddEdgesAmount(amount, config) {\n        if (amount <= 0) {\n            throw new Error('Cowardly refusing to add a non-positive amount of edges');\n        }\n        let node_a, node_b, nodes;\n        let direction = (config && config.directed) ? config.directed : false, dir = direction ? \"_d\" : \"_u\";\n        while (amount) {\n            node_a = this._graph.getRandomNode();\n            while ((node_b = this._graph.getRandomNode()) === node_a) { }\n            let edge_id = `${node_a.getID()}_${node_b.getID()}${dir}`;\n            if (node_a.hasEdgeID(edge_id)) {\n                continue;\n            }\n            else {\n                this._graph.addEdgeByID(edge_id, node_a, node_b, { directed: direction });\n                --amount;\n            }\n        }\n    }\n    randomlyAddNodesPercentage(percentage, config) {\n        let nr_nodes_to_add = Math.ceil(this._graph.nrNodes() * percentage / 100);\n        this.randomlyAddNodesAmount(nr_nodes_to_add, config);\n    }\n    randomlyAddNodesAmount(amount, config) {\n        if (amount < 0) {\n            throw 'Cowardly refusing to add a negative amount of nodes';\n        }\n        let new_nodes = {};\n        while (amount--) {\n            let new_node_id = (Math.random() + 1).toString(36).substr(2, 32) + (Math.random() + 1).toString(36).substr(2, 32);\n            new_nodes[new_node_id] = this._graph.addNodeByID(new_node_id);\n        }\n        if (config == null) {\n            return;\n        }\n        else {\n            this.createEdgesByConfig(config, new_nodes);\n        }\n    }\n    createEdgesByConfig(config, new_nodes) {\n        let degree, min_degree, max_degree, deg_probability;\n        if (config.und_degree != null ||\n            config.dir_degree != null ||\n            config.min_und_degree != null && config.max_und_degree != null ||\n            config.min_dir_degree != null && config.max_dir_degree != null) {\n            if ((degree = config.und_degree) != null) {\n                this.createRandomEdgesSpan(degree, degree, false, new_nodes);\n            }\n            else if ((min_degree = config.min_und_degree) != null\n                && (max_degree = config.max_und_degree) != null) {\n                this.createRandomEdgesSpan(min_degree, max_degree, false, new_nodes);\n            }\n            if (degree = config.dir_degree) {\n                this.createRandomEdgesSpan(degree, degree, true, new_nodes);\n            }\n            else if ((min_degree = config.min_dir_degree) != null\n                && (max_degree = config.max_dir_degree) != null) {\n                this.createRandomEdgesSpan(min_degree, max_degree, true, new_nodes);\n            }\n        }\n        else {\n            if (config.probability_dir != null) {\n                this.createRandomEdgesProb(config.probability_dir, true, new_nodes);\n            }\n            if (config.probability_und != null) {\n                this.createRandomEdgesProb(config.probability_und, false, new_nodes);\n            }\n        }\n    }\n    createRandomEdgesProb(probability, directed, new_nodes) {\n        if (0 > probability || 1 < probability) {\n            throw new Error(\"Probability out of range.\");\n        }\n        directed = directed || false;\n        new_nodes = new_nodes || this._graph.getNodes();\n        let all_nodes = this._graph.getNodes(), node_a, node_b, edge_id, dir = directed ? '_d' : '_u';\n        for (node_a in new_nodes) {\n            for (node_b in all_nodes) {\n                if (node_a !== node_b && Math.random() <= probability) {\n                    edge_id = all_nodes[node_a].getID() + \"_\" + all_nodes[node_b].getID() + dir;\n                    if (this._graph.getNodes()[node_a].hasEdgeID(edge_id)) {\n                        continue;\n                    }\n                    this._graph.addEdgeByID(edge_id, all_nodes[node_a], all_nodes[node_b], { directed: directed });\n                }\n            }\n        }\n    }\n    createRandomEdgesSpan(min, max, directed, setOfNodes) {\n        if (min < 0) {\n            throw new Error('Minimum degree cannot be negative.');\n        }\n        if (max >= this._graph.nrNodes()) {\n            throw new Error('Maximum degree exceeds number of reachable nodes.');\n        }\n        if (min > max) {\n            throw new Error('Minimum degree cannot exceed maximum degree.');\n        }\n        directed = directed || false;\n        var min = min | 0, max = max | 0, new_nodes = setOfNodes || this._graph.getNodes(), all_nodes = this._graph.getNodes(), idx_a, node_a, node_b, edge_id, node_keys = Object.keys(all_nodes), keys_len = node_keys.length, rand_idx, rand_deg, dir = directed ? '_d' : '_u';\n        for (idx_a in new_nodes) {\n            node_a = new_nodes[idx_a];\n            rand_idx = 0;\n            rand_deg = (Math.random() * (max - min) + min) | 0;\n            while (rand_deg) {\n                rand_idx = (keys_len * Math.random()) | 0;\n                node_b = all_nodes[node_keys[rand_idx]];\n                if (node_a !== node_b) {\n                    edge_id = node_a.getID() + \"_\" + node_b.getID() + dir;\n                    if (node_a.hasEdgeID(edge_id)) {\n                        continue;\n                    }\n                    this._graph.addEdgeByID(edge_id, node_a, node_b, { directed: directed });\n                    --rand_deg;\n                }\n            }\n        }\n    }\n}\nexports.SimplePerturber = SimplePerturber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst $G = require(\"../core/Graph\");\nclass KROL {\n    constructor(config) {\n        this._config = config || this.prepareKROLStandardConfig();\n        this._genMat = this._config.genMat;\n        this._cycles = this._config.cycles;\n        this._graph = new $G.BaseGraph('synth');\n    }\n    generate() {\n        var gen_dims = this._genMat[0].length;\n        var res_dims = Math.pow(gen_dims, this._cycles + 1);\n        for (let index = 0; index < res_dims; index++) {\n            this._graph.addNodeByID(index.toString());\n        }\n        var nr_edges = 0;\n        for (let node1 = 0; node1 < res_dims; node1++) {\n            for (let node2 = 0; node2 < res_dims; node2++) {\n                if (this.addEdge(node1, node2, gen_dims)) {\n                    this._graph.addEdgeByNodeIDs(node1 + '_' + node2, node1.toString(), node2.toString());\n                    ++nr_edges;\n                }\n            }\n        }\n        var result = {\n            graph: this._graph\n        };\n        return result;\n    }\n    addEdge(node1, node2, dims) {\n        var rprob = Math.random();\n        var prob = 1.0;\n        for (let level = 0; level < this._cycles; level++) {\n            var id_1 = Math.floor(node1 / Math.pow(dims, level + 1)) % dims;\n            var id_2 = Math.floor(node2 / Math.pow(dims, level + 1)) % dims;\n            prob *= this._genMat[id_1][id_2];\n            if (rprob > prob) {\n                return false;\n            }\n        }\n        return true;\n    }\n    prepareKROLStandardConfig() {\n        var genMat = [[0.9, 0.5], [0.5, 0.1]];\n        return {\n            genMat: genMat,\n            cycles: 5\n        };\n    }\n}\nexports.KROL = KROL;\n","// CORE\nconst Edges\t\t\t      \t\t\t\t= require(\"./lib/core/Edges.js\");\nconst Nodes \t\t      \t\t\t\t= require(\"./lib/core/Nodes.js\");\nconst Graph \t\t      \t\t\t\t= require(\"./lib/core/Graph.js\");\n// CENTRALITIES\nconst BetweennessCent\t\t\t\t\t= require(\"./lib/centralities/Betweenness.js\");\nconst BrandesCent\t\t\t\t\t\t\t= require(\"./lib/centralities/Brandes\");\nconst ClosenessCent\t \t\t\t\t\t= require(\"./lib/centralities/Closeness.js\");\nconst DegreeCent\t\t \t\t\t\t\t= require(\"./lib/centralities/Degree.js\");\nconst PagerankCent\t\t\t\t\t\t= require(\"./lib/centralities/Pagerank.js\");\n// IO\nconst CSVInput \t      \t\t\t\t= require(\"./lib/io/input/CSVInput.js\");\nconst CSVOutput       \t\t\t\t= require(\"./lib/io/output/CSVOutput.js\");\nconst JSONInput       \t\t\t\t= require(\"./lib/io/input/JSONInput.js\");\nconst JSONOutput      \t\t\t\t= require(\"./lib/io/output/JSONOutput.js\");\n// SEARCH\nconst BFS\t\t\t\t      \t\t\t\t= require(\"./lib/search/BFS.js\");\nconst DFS\t\t\t\t      \t\t\t\t= require(\"./lib/search/DFS.js\");\nconst PFS             \t\t\t\t= require(\"./lib/search/PFS.js\");\nconst Dijkstra\t\t\t\t\t\t\t\t= require(\"./lib/search/Dijkstra\");\nconst BellmanFord     \t\t\t\t= require(\"./lib/search/BellmanFord.js\");\nconst FloydWarshall\t\t\t\t\t\t= require(\"./lib/search/FloydWarshall.js\");\nconst Johnsons\t\t\t\t\t\t\t\t= require(\"./lib/search/Johnsons.js\");\n// UTILS\nconst StructUtils     \t\t\t\t= require(\"./lib/utils/StructUtils.js\");\nconst RemoteUtils     \t\t\t\t= require(\"./lib/utils/RemoteUtils.js\");\nconst CallbackUtils   \t\t\t\t= require(\"./lib/utils/CallbackUtils.js\");\n// DATASTRUCTS\nconst BinaryHeap      \t\t\t\t= require(\"./lib/datastructs/BinaryHeap.js\");\n// PERTURBATION\nconst Perturb\t\t\t\t\t\t\t\t\t= require(\"./lib/perturbation/SimplePerturbations.js\");\n// GENERATORS\nconst KronLeskovec\t\t\t\t\t\t= require(\"./lib/generators/KroneckerLeskovec.js\");\n// MISC\n// var MCMFBoykov\t\t\t\t\t\t\t= require(\"./dist/mincutmaxflow/minCutMaxFlowBoykov.js\");\n// var PRGauss\t\t\t\t\t\t\t\t= require(\"./lib/centralities/PageRankGaussian.js\");\n\n\n// Define global object\nlet out = typeof window !== 'undefined' ? window : global;\n\n/**\n * Inside Global or Window object\n */\nout.$G = {\n\tcore: {\n\t\tBaseEdge \t\t\t\t\t\t\t\t\t: Edges.BaseEdge,\n\t\tBaseNode \t\t\t\t\t\t\t\t\t: Nodes.BaseNode,\n\t\tBaseGraph \t\t\t\t\t\t\t\t: Graph.BaseGraph,\n\t\tGraphMode\t\t\t\t\t\t\t\t\t: Graph.GraphMode\n\t},\n\tcentralities: {\n\t\tBetweenness\t\t\t\t\t\t\t\t: BetweennessCent.betweennessCentrality,\n\t\tBrandes\t\t\t\t\t\t\t\t\t\t: BrandesCent.Brandes,\n\t\tCloseness\t\t\t\t\t\t\t\t\t: ClosenessCent.ClosenessCentrality,\n\t\tDegree\t\t\t\t\t\t\t\t\t\t: DegreeCent.DegreeCentrality,\n\t\tPagerank\t\t\t\t\t\t\t\t\t: PagerankCent.Pagerank\n\t},\t\t\t\t\t\t\t\n\tinput: {\t\t\t\t\t\t\t\n\t\tCSVInput \t\t\t\t\t\t\t\t\t: CSVInput.CSVInput,\n\t\tJSONInput \t\t\t\t\t\t\t\t: JSONInput.JSONInput\n\t},\t\t\t\t\t\t\t\n\toutput: {\t\t\t\t\t\t\t\n\t\tCSVOutput\t\t\t\t\t\t\t\t\t: CSVOutput.CSVOutput,\n\t\tJSONOutput\t\t\t\t\t\t\t\t: JSONOutput.JSONOutput\n\t},\n\tsearch: {\n\t\tBFS\t\t\t\t\t\t\t\t\t\t\t\t: BFS,\n\t\tDFS \t\t\t\t\t\t\t\t\t\t\t: DFS,\n\t\tPFS           \t\t\t\t\t\t: PFS,\n\t\tDijkstra\t\t\t\t\t\t\t\t\t: Dijkstra,\n\t\tBellmanFord\t\t\t\t\t\t\t\t: BellmanFord,\n\t\tFloydWarshall\t\t\t\t\t\t\t: FloydWarshall,\n\t\tJohnsons\t\t\t\t\t\t\t\t\t: Johnsons\n\t},\t\t\t\t\t\t\n  utils: {\t\t\t\t\t\t\n    Struct        \t\t\t\t\t\t: StructUtils,\n\t\tRemote        \t\t\t\t\t\t: RemoteUtils,\n    Callback \t\t\t\t\t\t\t\t\t: CallbackUtils\n  },\n  datastructs: {\n    BinaryHeap  \t\t\t\t\t\t\t: BinaryHeap.BinaryHeap\n  },\n\tperturbation: {\n\t\tSimplePerturber\t\t\t\t\t\t: Perturb.SimplePerturber\n\t},\n\tgenerators: {\n\t\tKronecker\t\t\t\t\t\t\t\t\t: KronLeskovec.KROL\n\t},\n\t// mincut: {\n\t// \tMCMFBoykov\t\t\t\t\t\t\t: MCMFBoykov.MCMFBoykov\n\t// },\n};\n\n/**\n * For NodeJS / CommonJS global object\n */\nmodule.exports = out.$G;\n","import { IGraph } from 'graphinius/lib/core/Graph';\nimport { JSONInput, JSONGraph, JSONNode } from 'graphinius/lib/io/input/JSONInput';\n\nconst jsonIn = new JSONInput({directed: true, explicit_direction: false, weighted: false});\n\n\nasync function importGraphFromURL(graphFile) {\n  const graphBytes = await(await fetch(graphFile));\n  const graphString = await graphBytes.json();\n  const graph = jsonIn.readFromJSON(graphString);  \n  return graph;\n}\n\n\nexport {\n  importGraphFromURL\n}\n","import { IBaseNode } from 'graphinius/lib/core/Nodes';\nimport { IGraph, BaseGraph } from 'graphinius/lib/core/Graph';\nimport { MeetupIndexesLunr } from '../common/interfaces';\n\ndeclare const lunr;\n\nconst types = {\n  Group: [] as IBaseNode[],\n  Topic: [] as IBaseNode[],\n  Member: [] as IBaseNode[],\n  Event: [] as IBaseNode[]\n};\n\n\nfunction buildIndexesLunr(graph: IGraph) : MeetupIndexesLunr {\n  const indexes: MeetupIndexesLunr = {\n    groupIdx: null,\n    topicIdx: null,\n    memberIdx: null,\n    eventIdx: null\n  }\n\n  Object.values(graph.getNodes()).forEach( n => {\n    types[n.getLabel()].push(n);\n  });\n  Object.keys(types).forEach(k => console.log(`${types[k].length} nodes of type ${k} registered.`));\n\n  indexes.groupIdx = lunr(function () {\n    this.ref('id');\n    this.field('name');\n    this.field('description');\n    this.field('organiserName');\n\n    types.Group.forEach(n => this.add({\n      id: n.getID(),\n      name: n.getFeature('name'),\n      description: n.getFeature('description'),\n      organiserName: n.getFeature('organiserName')\n    }));\n  });\n\n  indexes.topicIdx = lunr(function () {\n    this.ref('id');\n    this.field('name');\n    this.field('urlkey');\n\n    types.Topic.forEach(n => this.add({\n      id: n.getID(),\n      name: n.getFeature('name'),\n      urlkey: n.getFeature('urlkey'),\n    }));\n  });\n\n  indexes.memberIdx = lunr(function () {\n    this.ref('id');\n    this.field('name');\n\n    types.Member.forEach(n => this.add({\n      id: n.getID(),\n      name: n.getFeature('name'),\n    }));\n  });\n\n  indexes.eventIdx = lunr(function () {\n    this.ref('id');\n    this.field('name');\n    this.field('description');\n\n    types.Event.forEach(n => this.add({\n      id: n.getID(),\n      name: n.getFeature('name'),\n      description: n.getFeature('description')\n    }));\n  });\n\n  return indexes;\n}\n\nexport {\n  buildIndexesLunr\n}","/*!\n * Fuse.js v3.4.5 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Fuse\",[],t):\"object\"==typeof exports?exports.Fuse=t():e.Fuse=t()}(this,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1)}([function(e,t){e.exports=function(e){return Array.isArray?Array.isArray(e):\"[object Array]\"===Object.prototype.toString.call(e)}},function(e,t,n){function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=n(2),a=n(8),s=n(0),c=function(){function e(t,n){var r=n.location,o=void 0===r?0:r,i=n.distance,s=void 0===i?100:i,c=n.threshold,h=void 0===c?.6:c,l=n.maxPatternLength,u=void 0===l?32:l,f=n.caseSensitive,d=void 0!==f&&f,v=n.tokenSeparator,p=void 0===v?/ +/g:v,g=n.findAllMatches,y=void 0!==g&&g,m=n.minMatchCharLength,k=void 0===m?1:m,S=n.id,x=void 0===S?null:S,b=n.keys,M=void 0===b?[]:b,_=n.shouldSort,L=void 0===_||_,w=n.getFn,A=void 0===w?a:w,C=n.sortFn,I=void 0===C?function(e,t){return e.score-t.score}:C,O=n.tokenize,j=void 0!==O&&O,P=n.matchAllTokens,F=void 0!==P&&P,T=n.includeMatches,z=void 0!==T&&T,E=n.includeScore,K=void 0!==E&&E,$=n.verbose,J=void 0!==$&&$;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.options={location:o,distance:s,threshold:h,maxPatternLength:u,isCaseSensitive:d,tokenSeparator:p,findAllMatches:y,minMatchCharLength:k,id:x,keys:M,includeMatches:z,includeScore:K,shouldSort:L,getFn:A,sortFn:I,verbose:J,tokenize:j,matchAllTokens:F},this.setCollection(t)}var t,n,c;return t=e,(n=[{key:\"setCollection\",value:function(e){return this.list=e,e}},{key:\"search\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{limit:!1};this._log('---------\\nSearch pattern: \"'.concat(e,'\"'));var n=this._prepareSearchers(e),r=n.tokenSearchers,o=n.fullSearcher,i=this._search(r,o),a=i.weights,s=i.results;return this._computeScore(a,s),this.options.shouldSort&&this._sort(s),t.limit&&\"number\"==typeof t.limit&&(s=s.slice(0,t.limit)),this._format(s)}},{key:\"_prepareSearchers\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=[];if(this.options.tokenize)for(var n=e.split(this.options.tokenSeparator),r=0,o=n.length;r<o;r+=1)t.push(new i(n[r],this.options));return{tokenSearchers:t,fullSearcher:new i(e,this.options)}}},{key:\"_search\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,n=this.list,r={},o=[];if(\"string\"==typeof n[0]){for(var i=0,a=n.length;i<a;i+=1)this._analyze({key:\"\",value:n[i],record:i,index:i},{resultMap:r,results:o,tokenSearchers:e,fullSearcher:t});return{weights:null,results:o}}for(var s={},c=0,h=n.length;c<h;c+=1)for(var l=n[c],u=0,f=this.options.keys.length;u<f;u+=1){var d=this.options.keys[u];if(\"string\"!=typeof d){if(s[d.name]={weight:1-d.weight||1},d.weight<=0||d.weight>1)throw new Error(\"Key weight has to be > 0 and <= 1\");d=d.name}else s[d]={weight:1};this._analyze({key:d,value:this.options.getFn(l,d),record:l,index:c},{resultMap:r,results:o,tokenSearchers:e,fullSearcher:t})}return{weights:s,results:o}}},{key:\"_analyze\",value:function(e,t){var n=e.key,r=e.arrayIndex,o=void 0===r?-1:r,i=e.value,a=e.record,c=e.index,h=t.tokenSearchers,l=void 0===h?[]:h,u=t.fullSearcher,f=void 0===u?[]:u,d=t.resultMap,v=void 0===d?{}:d,p=t.results,g=void 0===p?[]:p;if(null!=i){var y=!1,m=-1,k=0;if(\"string\"==typeof i){this._log(\"\\nKey: \".concat(\"\"===n?\"-\":n));var S=f.search(i);if(this._log('Full text: \"'.concat(i,'\", score: ').concat(S.score)),this.options.tokenize){for(var x=i.split(this.options.tokenSeparator),b=[],M=0;M<l.length;M+=1){var _=l[M];this._log('\\nPattern: \"'.concat(_.pattern,'\"'));for(var L=!1,w=0;w<x.length;w+=1){var A=x[w],C=_.search(A),I={};C.isMatch?(I[A]=C.score,y=!0,L=!0,b.push(C.score)):(I[A]=1,this.options.matchAllTokens||b.push(1)),this._log('Token: \"'.concat(A,'\", score: ').concat(I[A]))}L&&(k+=1)}m=b[0];for(var O=b.length,j=1;j<O;j+=1)m+=b[j];m/=O,this._log(\"Token score average:\",m)}var P=S.score;m>-1&&(P=(P+m)/2),this._log(\"Score average:\",P);var F=!this.options.tokenize||!this.options.matchAllTokens||k>=l.length;if(this._log(\"\\nCheck Matches: \".concat(F)),(y||S.isMatch)&&F){var T=v[c];T?T.output.push({key:n,arrayIndex:o,value:i,score:P,matchedIndices:S.matchedIndices}):(v[c]={item:a,output:[{key:n,arrayIndex:o,value:i,score:P,matchedIndices:S.matchedIndices}]},g.push(v[c]))}}else if(s(i))for(var z=0,E=i.length;z<E;z+=1)this._analyze({key:n,arrayIndex:z,value:i[z],record:a,index:c},{resultMap:v,results:g,tokenSearchers:l,fullSearcher:f})}}},{key:\"_computeScore\",value:function(e,t){this._log(\"\\n\\nComputing score:\\n\");for(var n=0,r=t.length;n<r;n+=1){for(var o=t[n].output,i=o.length,a=1,s=1,c=0;c<i;c+=1){var h=e?e[o[c].key].weight:1,l=(1===h?o[c].score:o[c].score||.001)*h;1!==h?s=Math.min(s,l):(o[c].nScore=l,a*=l)}t[n].score=1===s?a:s,this._log(t[n])}}},{key:\"_sort\",value:function(e){this._log(\"\\n\\nSorting....\"),e.sort(this.options.sortFn)}},{key:\"_format\",value:function(e){var t=[];if(this.options.verbose){var n=[];this._log(\"\\n\\nOutput:\\n\\n\",JSON.stringify(e,function(e,t){if(\"object\"===r(t)&&null!==t){if(-1!==n.indexOf(t))return;n.push(t)}return t})),n=null}var o=[];this.options.includeMatches&&o.push(function(e,t){var n=e.output;t.matches=[];for(var r=0,o=n.length;r<o;r+=1){var i=n[r];if(0!==i.matchedIndices.length){var a={indices:i.matchedIndices,value:i.value};i.key&&(a.key=i.key),i.hasOwnProperty(\"arrayIndex\")&&i.arrayIndex>-1&&(a.arrayIndex=i.arrayIndex),t.matches.push(a)}}}),this.options.includeScore&&o.push(function(e,t){t.score=e.score});for(var i=0,a=e.length;i<a;i+=1){var s=e[i];if(this.options.id&&(s.item=this.options.getFn(s.item,this.options.id)[0]),o.length){for(var c={item:s.item},h=0,l=o.length;h<l;h+=1)o[h](s,c);t.push(c)}else t.push(s.item)}return t}},{key:\"_log\",value:function(){var e;this.options.verbose&&(e=console).log.apply(e,arguments)}}])&&o(t.prototype,n),c&&o(t,c),e}();e.exports=c},function(e,t,n){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(3),i=n(4),a=n(7),s=function(){function e(t,n){var r=n.location,o=void 0===r?0:r,i=n.distance,s=void 0===i?100:i,c=n.threshold,h=void 0===c?.6:c,l=n.maxPatternLength,u=void 0===l?32:l,f=n.isCaseSensitive,d=void 0!==f&&f,v=n.tokenSeparator,p=void 0===v?/ +/g:v,g=n.findAllMatches,y=void 0!==g&&g,m=n.minMatchCharLength,k=void 0===m?1:m;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.options={location:o,distance:s,threshold:h,maxPatternLength:u,isCaseSensitive:d,tokenSeparator:p,findAllMatches:y,minMatchCharLength:k},this.pattern=this.options.isCaseSensitive?t:t.toLowerCase(),this.pattern.length<=u&&(this.patternAlphabet=a(this.pattern))}var t,n,s;return t=e,(n=[{key:\"search\",value:function(e){if(this.options.isCaseSensitive||(e=e.toLowerCase()),this.pattern===e)return{isMatch:!0,score:0,matchedIndices:[[0,e.length-1]]};var t=this.options,n=t.maxPatternLength,r=t.tokenSeparator;if(this.pattern.length>n)return o(e,this.pattern,r);var a=this.options,s=a.location,c=a.distance,h=a.threshold,l=a.findAllMatches,u=a.minMatchCharLength;return i(e,this.pattern,this.patternAlphabet,{location:s,distance:c,threshold:h,findAllMatches:l,minMatchCharLength:u})}}])&&r(t.prototype,n),s&&r(t,s),e}();e.exports=s},function(e,t){var n=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;e.exports=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:/ +/g,o=new RegExp(t.replace(n,\"\\\\$&\").replace(r,\"|\")),i=e.match(o),a=!!i,s=[];if(a)for(var c=0,h=i.length;c<h;c+=1){var l=i[c];s.push([e.indexOf(l),l.length-1])}return{score:a?.5:1,isMatch:a,matchedIndices:s}}},function(e,t,n){var r=n(5),o=n(6);e.exports=function(e,t,n,i){for(var a=i.location,s=void 0===a?0:a,c=i.distance,h=void 0===c?100:c,l=i.threshold,u=void 0===l?.6:l,f=i.findAllMatches,d=void 0!==f&&f,v=i.minMatchCharLength,p=void 0===v?1:v,g=s,y=e.length,m=u,k=e.indexOf(t,g),S=t.length,x=[],b=0;b<y;b+=1)x[b]=0;if(-1!==k){var M=r(t,{errors:0,currentLocation:k,expectedLocation:g,distance:h});if(m=Math.min(M,m),-1!==(k=e.lastIndexOf(t,g+S))){var _=r(t,{errors:0,currentLocation:k,expectedLocation:g,distance:h});m=Math.min(_,m)}}k=-1;for(var L=[],w=1,A=S+y,C=1<<S-1,I=0;I<S;I+=1){for(var O=0,j=A;O<j;){r(t,{errors:I,currentLocation:g+j,expectedLocation:g,distance:h})<=m?O=j:A=j,j=Math.floor((A-O)/2+O)}A=j;var P=Math.max(1,g-j+1),F=d?y:Math.min(g+j,y)+S,T=Array(F+2);T[F+1]=(1<<I)-1;for(var z=F;z>=P;z-=1){var E=z-1,K=n[e.charAt(E)];if(K&&(x[E]=1),T[z]=(T[z+1]<<1|1)&K,0!==I&&(T[z]|=(L[z+1]|L[z])<<1|1|L[z+1]),T[z]&C&&(w=r(t,{errors:I,currentLocation:E,expectedLocation:g,distance:h}))<=m){if(m=w,(k=E)<=g)break;P=Math.max(1,2*g-k)}}if(r(t,{errors:I+1,currentLocation:g,expectedLocation:g,distance:h})>m)break;L=T}return{isMatch:k>=0,score:0===w?.001:w,matchedIndices:o(x,p)}}},function(e,t){e.exports=function(e,t){var n=t.errors,r=void 0===n?0:n,o=t.currentLocation,i=void 0===o?0:o,a=t.expectedLocation,s=void 0===a?0:a,c=t.distance,h=void 0===c?100:c,l=r/e.length,u=Math.abs(s-i);return h?l+u/h:u?1:l}},function(e,t){e.exports=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],r=-1,o=-1,i=0,a=e.length;i<a;i+=1){var s=e[i];s&&-1===r?r=i:s||-1===r||((o=i-1)-r+1>=t&&n.push([r,o]),r=-1)}return e[i-1]&&i-r>=t&&n.push([r,i-1]),n}},function(e,t){e.exports=function(e){for(var t={},n=e.length,r=0;r<n;r+=1)t[e.charAt(r)]=0;for(var o=0;o<n;o+=1)t[e.charAt(o)]|=1<<n-o-1;return t}},function(e,t,n){var r=n(0);e.exports=function(e,t){return function e(t,n,o){if(n){var i=n.indexOf(\".\"),a=n,s=null;-1!==i&&(a=n.slice(0,i),s=n.slice(i+1));var c=t[a];if(null!=c)if(s||\"string\"!=typeof c&&\"number\"!=typeof c)if(r(c))for(var h=0,l=c.length;h<l;h+=1)e(c[h],s,o);else s&&e(c,s,o);else o.push(c.toString())}else o.push(t);return o}(e,t,[])}}])});","import { MeetupIndexesFuse } from '../common/interfaces';\nimport { IBaseNode } from 'graphinius/lib/core/Nodes';\nimport { IGraph, BaseGraph } from 'graphinius/lib/core/Graph';\nimport Fuse from 'fuse.js';\n\n// console.log(Fuse);\n\nconst types = {\n  Groups: [],\n  Topics: [],\n  Members: [],\n  Events: []\n};\n\nconst fuseCfg = {\n  distance: 100,\n  findAllMatches: false,\n  id: 'id',\n  includeMatches: false,\n  includeScore: true,\n  isCaseSensitive: false,\n  location: 0,\n  matchAllTokens: false,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  shouldSort: true,\n  sortFn: (e,t) => e-t,\n  threshold: 0.6,\n  tokenSeparator: / +/g,\n  tokenize: true,\n  verbose: false\n}\n\n\nfunction buildIndexesFuse(graph: IGraph) : MeetupIndexesFuse {\n  const indexes: MeetupIndexesFuse = {\n    groupIdx: null,\n    topicIdx: null,\n    memberIdx: null,\n    eventIdx: null\n  }\n\n  Object.values(graph.getNodes()).forEach( n => {\n    switch(n.getLabel()) {\n      case 'Group':\n        let groupIdxEntry = {\n          id              : n.getID(),\n          name            : n.getFeature('name'),\n          description     : n.getFeature('description'),\n          organiserName   : n.getFeature('organiserName')\n        }\n        types.Groups.push(groupIdxEntry);\n        break;\n      case 'Topic':\n        let topicIdxEntry = {\n          id              : n.getID(),\n          name            : n.getFeature('name'),\n          urlkey          : n.getFeature('urlkey')\n        }\n        types.Topics.push(topicIdxEntry);\n        break;\n      case 'Member':\n        let memberIdxEntry = {\n          id              : n.getID(),\n          name            : n.getFeature('name')\n        }\n        types.Members.push(memberIdxEntry);\n        break;\n      case 'Event':\n        let eventIdxEntry = {\n          id              : n.getID(),\n          name            : n.getFeature('name'),\n          description     : n.getFeature('description')\n        }\n        types.Events.push(eventIdxEntry);\n        break;\n      default:\n        console.log(`Node Type not supported in Meetup scenario...!`);\n        return false;\n    }\n  });\n  Object.keys(types).forEach(k => console.log(`${types[k].length} nodes of type ${k} registered.`));\n\n  indexes.groupIdx = new Fuse(types.Groups, {keys: ['name', 'description', 'organiserName'], ...fuseCfg});\n  indexes.topicIdx = new Fuse(types.Topics, {keys: ['name', 'urlkey'], ...fuseCfg});\n  indexes.memberIdx = new Fuse(types.Members, {keys: ['name'], ...fuseCfg});\n  indexes.eventIdx = new Fuse(types.Events, {keys: ['name', 'description'], ...fuseCfg});\n\n  window.idxFuse = indexes;\n  return indexes;\n}\n\n\nexport {\n  buildIndexesFuse\n}","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n\nlet idbProxyableTypes;\r\nlet cursorAdvanceMethods;\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getIdbProxyableTypes() {\r\n    return idbProxyableTypes ||\r\n        (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\r\n}\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getCursorAdvanceMethods() {\r\n    return cursorAdvanceMethods || (cursorAdvanceMethods = [\r\n        IDBCursor.prototype.advance,\r\n        IDBCursor.prototype.continue,\r\n        IDBCursor.prototype.continuePrimaryKey,\r\n    ]);\r\n}\r\nconst cursorRequestMap = new WeakMap();\r\nconst transactionDoneMap = new WeakMap();\r\nconst transactionStoreNamesMap = new WeakMap();\r\nconst transformCache = new WeakMap();\r\nconst reverseTransformCache = new WeakMap();\r\nfunction promisifyRequest(request) {\r\n    const promise = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            request.removeEventListener('success', success);\r\n            request.removeEventListener('error', error);\r\n        };\r\n        const success = () => {\r\n            resolve(wrap(request.result));\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(request.error);\r\n            unlisten();\r\n        };\r\n        request.addEventListener('success', success);\r\n        request.addEventListener('error', error);\r\n    });\r\n    promise.then((value) => {\r\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\r\n        // (see wrapFunction).\r\n        if (value instanceof IDBCursor) {\r\n            cursorRequestMap.set(value, request);\r\n        }\r\n        // Catching to avoid \"Uncaught Promise exceptions\"\r\n    }).catch(() => { });\r\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\r\n    // is because we create many promises from a single IDBRequest.\r\n    reverseTransformCache.set(promise, request);\r\n    return promise;\r\n}\r\nfunction cacheDonePromiseForTransaction(tx) {\r\n    // Early bail if we've already created a done promise for this transaction.\r\n    if (transactionDoneMap.has(tx))\r\n        return;\r\n    const done = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            tx.removeEventListener('complete', complete);\r\n            tx.removeEventListener('error', error);\r\n            tx.removeEventListener('abort', error);\r\n        };\r\n        const complete = () => {\r\n            resolve();\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(tx.error);\r\n            unlisten();\r\n        };\r\n        tx.addEventListener('complete', complete);\r\n        tx.addEventListener('error', error);\r\n        tx.addEventListener('abort', error);\r\n    });\r\n    // Cache it for later retrieval.\r\n    transactionDoneMap.set(tx, done);\r\n}\r\nlet idbProxyTraps = {\r\n    get(target, prop, receiver) {\r\n        if (target instanceof IDBTransaction) {\r\n            // Special handling for transaction.done.\r\n            if (prop === 'done')\r\n                return transactionDoneMap.get(target);\r\n            // Polyfill for objectStoreNames because of Edge.\r\n            if (prop === 'objectStoreNames') {\r\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\r\n            }\r\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\r\n            if (prop === 'store') {\r\n                return receiver.objectStoreNames[1] ?\r\n                    undefined : receiver.objectStore(receiver.objectStoreNames[0]);\r\n            }\r\n        }\r\n        // Else transform whatever we get back.\r\n        return wrap(target[prop]);\r\n    },\r\n    has(target, prop) {\r\n        if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store'))\r\n            return true;\r\n        return prop in target;\r\n    },\r\n};\r\nfunction addTraps(callback) {\r\n    idbProxyTraps = callback(idbProxyTraps);\r\n}\r\nfunction wrapFunction(func) {\r\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\r\n    // only create one new func per func.\r\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\r\n    if (func === IDBDatabase.prototype.transaction &&\r\n        !('objectStoreNames' in IDBTransaction.prototype)) {\r\n        return function (storeNames, ...args) {\r\n            const tx = func.call(unwrap(this), storeNames, ...args);\r\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\r\n            return wrap(tx);\r\n        };\r\n    }\r\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\r\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\r\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\r\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\r\n    // undefined if the end of the cursor has been reached.\r\n    if (getCursorAdvanceMethods().includes(func)) {\r\n        return function (...args) {\r\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n            // the original object.\r\n            func.apply(unwrap(this), args);\r\n            return wrap(cursorRequestMap.get(this));\r\n        };\r\n    }\r\n    return function (...args) {\r\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n        // the original object.\r\n        return wrap(func.apply(unwrap(this), args));\r\n    };\r\n}\r\nfunction transformCachableValue(value) {\r\n    if (typeof value === 'function')\r\n        return wrapFunction(value);\r\n    // This doesn't return, it just creates a 'done' promise for the transaction,\r\n    // which is later returned for transaction.done (see idbObjectHandler).\r\n    if (value instanceof IDBTransaction)\r\n        cacheDonePromiseForTransaction(value);\r\n    if (instanceOfAny(value, getIdbProxyableTypes()))\r\n        return new Proxy(value, idbProxyTraps);\r\n    // Return the same value back if we're not going to transform it.\r\n    return value;\r\n}\r\nfunction wrap(value) {\r\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\r\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\r\n    if (value instanceof IDBRequest)\r\n        return promisifyRequest(value);\r\n    // If we've already transformed this value before, reuse the transformed value.\r\n    // This is faster, but it also provides object equality.\r\n    if (transformCache.has(value))\r\n        return transformCache.get(value);\r\n    const newValue = transformCachableValue(value);\r\n    // Not all types are transformed.\r\n    // These may be primitive types, so they can't be WeakMap keys.\r\n    if (newValue !== value) {\r\n        transformCache.set(value, newValue);\r\n        reverseTransformCache.set(newValue, value);\r\n    }\r\n    return newValue;\r\n}\r\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { wrap as a, addTraps as b, instanceOfAny as c, reverseTransformCache as d, unwrap as e };\n","import { a as wrap, b as addTraps } from './chunk.js';\nexport { e as unwrap, a as wrap } from './chunk.js';\n\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\r\nfunction openDB(name, version, { blocked, upgrade, blocking } = {}) {\r\n    const request = indexedDB.open(name, version);\r\n    const openPromise = wrap(request);\r\n    if (upgrade) {\r\n        request.addEventListener('upgradeneeded', (event) => {\r\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\r\n        });\r\n    }\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    if (blocking)\r\n        openPromise.then(db => db.addEventListener('versionchange', blocking));\r\n    return openPromise;\r\n}\r\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\r\nfunction deleteDB(name, { blocked } = {}) {\r\n    const request = indexedDB.deleteDatabase(name);\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    return wrap(request).then(() => undefined);\r\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\r\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\r\nconst cachedMethods = new Map();\r\nfunction getMethod(target, prop) {\r\n    if (!(target instanceof IDBDatabase &&\r\n        !(prop in target) &&\r\n        typeof prop === 'string'))\r\n        return;\r\n    if (cachedMethods.get(prop))\r\n        return cachedMethods.get(prop);\r\n    const targetFuncName = prop.replace(/FromIndex$/, '');\r\n    const useIndex = prop !== targetFuncName;\r\n    const isWrite = writeMethods.includes(targetFuncName);\r\n    if (\r\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\r\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\r\n        !(isWrite || readMethods.includes(targetFuncName)))\r\n        return;\r\n    const method = async function (storeName, ...args) {\r\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\r\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\r\n        let target = tx.store;\r\n        if (useIndex)\r\n            target = target.index(args.shift());\r\n        const returnVal = target[targetFuncName](...args);\r\n        if (isWrite)\r\n            await tx.done;\r\n        return returnVal;\r\n    };\r\n    cachedMethods.set(prop, method);\r\n    return method;\r\n}\r\naddTraps(oldTraps => ({\r\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\r\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\r\n}));\n\nexport { openDB, deleteDB };\n","import * as $G from 'graphinius';\n\nimport { IGraph, BaseGraph } from 'graphinius/lib/core/Graph';\nimport { importGraphFromURL } from './common/importGraph';\nimport {  buildIndexesLunr } from './meetup/meetupIndexesLunr';\nimport {  buildIndexesFuse } from './meetup/meetupIndexesFuse';\nimport { similarGroupsRec } from './meetup/simpleGroupRecs';\nimport { initDB, GRAPH_DB_NAME, STORE_NAME } from './common/graphDB';\nimport { IDBPDatabase, IDBPObjectStore } from 'idb';\n\nconst testGraphDir = `../test-data/graphs`;\nconst graphExt = `json`;\nconst graphName = `meetupGraph`;\nconst meetupFile = `${testGraphDir}/${graphName}.${graphExt}`;\n\nlet db : IDBPDatabase;\nlet store   : IDBPObjectStore<unknown, [\"graphs\"], \"graphs\">;\n\nconst SEARCH_TERM = \"Graph Database\";\n\n\n(async () => {\n  console.log(`Loading Meetup graph...`);\n  let tic = +new Date;\n  const mug: IGraph = await getOrCreateGraph(meetupFile);\n  let toc = +new Date;\n  console.log(`Importing graph of |V|=${mug.nrNodes()} and |E_dir|=${mug.nrDirEdges()} took ${toc-tic} ms.`);\n\n  const indexesLunr = createLunrIndex(mug);\n  const indexesFuse = createFuseIndex(mug);\n})();\n\n\nfunction createLunrIndex(graph: IGraph) {\n  let tic = +new Date;\n  const indexes = buildIndexesLunr(graph);\n  let toc = +new Date;\n  console.log(`Building Indexes in LUNR took ${toc-tic} ms.`)\n\n  let searchRes = indexes.groupIdx.search(SEARCH_TERM);\n  searchRes.forEach(res => {\n    let node = graph.getNodeById(res.ref);\n    console.log(node.getFeatures());\n  })\n\n  return indexes;\n}\n\n\nfunction createFuseIndex(graph: IGraph) {\n  let tic = +new Date;\n  const indexes = buildIndexesFuse(graph);\n  let toc = +new Date;\n  console.log(`Building Indexes in FUSE took ${toc-tic} ms.`)\n\n  let searchRes = indexes.groupIdx.search(SEARCH_TERM);\n  // console.log(searchRes);\n  searchRes.forEach(res => {\n    let node = graph.getNodeById(res['item']);\n    console.log(node.getFeatures());\n  })\n\n  return indexes;\n}\n\n\nasync function getOrCreateGraph(graphName: string) {\n  // let graph: IGraph = await getGraphFromIDB();\n  // console.log('Graph vom IDB:', graph);\n\n  // if ( graph ) {\n  //   console.log(`RETRIEVED Meetup graph from IDB`);\n  // }\n  // else {\n  //   graph = await importGraphFromURL(meetupFile);\n  //   console.log(`CREATED Meetup graph from JSON`);\n  //   // await addGraphToIDB(graph);\n  // }\n\n  let graph = await importGraphFromURL(meetupFile);\n  /* HACKETY HACK */\n  window.$G = $G.default;\n  window.graph = graph;\n\n  return graph;\n}\n\n\n\nasync function getGraphFromIDB() {\n  const tx = db.transaction(STORE_NAME);\n  const store = tx.objectStore(STORE_NAME);\n  const graph: IGraph = await store.get(graphName);\n  await tx.done;\n  return graph;\n}\n\n\nasync function addGraphToIDB(graph: IGraph) {\n  const tx = db.transaction(STORE_NAME, 'readwrite');\n  const store = tx.objectStore(STORE_NAME);\n  await store.add(graph, graphName).catch(e => console.log(e));\n  await tx.done;\n  return graph;\n}\n\n\n\n  // db = await initDB();  \n  // console.log(`IDB graph DB store initialized:`);\n  // console.log(db);"],"names":["$N","$E","$SU","$G","$CB","$BH","$BF","$PFS","run_config_1","Nodes_1","BellmanFord_1","Edges_1","$JO","$FW","$P","StructUtils_1","$R","global","BetweennessCent","BrandesCent","ClosenessCent","DegreeCent","PagerankCent","CSVInput","JSONInput","CSVOutput","JSONOutput","BFS","DFS","PFS","Dijkstra","Johnsons","BinaryHeap","Perturb","KronLeskovec","this","types","$G.default"],"mappings":"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,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG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"}